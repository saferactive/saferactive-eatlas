{"version":3,"sources":["JSUtils.js","img/icons.png","notes.md","icon-cluster-layer.js","history.js","utils.js","components/RBDropdownComponent.jsx","components/MapboxBaseLayers.jsx","geojsonutils.js","components/MultiSelect.jsx","components/Variables.jsx","components/RBAlert.jsx","components/ColourPicker.jsx","components/Modal.jsx","components/Table.jsx","components/UI.js","components/Showcases/SeriesPlot.jsx","components/TreeMap.jsx","components/AddVIS.jsx","components/DeckSidebar/DeckSidebar.jsx","components/Showcases/Widgets.jsx","components/Showcases/HexbinSeries.jsx","components/DeckSidebar/HexPlot.jsx","components/DeckSidebar/DeckSidebarContainer.jsx","components/Showcases/MultiLinePlot.jsx","components/Tooltip.jsx","Welcome.js","components/Header.jsx","About.js","App.js","registerServiceWorker.js","index.js","Constants.js"],"names":["isString","x","undefined","constructor","String","isNumber","Number","isBoolean","Boolean","exports","isObject","Object","isArray","Array","isDate","d","prototype","toString","call","isNaN","getTime","sanitizeFloat","number","n","parseFloat","sanitizeInt","parseInt","sanitizeString","string","sanitizeStringNonNull","sanitizeBool","bool","isEmptyOrSpaces","str","match","module","getIconName","size","Math","floor","IconClusterLayer","changeFlags","somethingChanged","props","oldProps","rebuildIndex","dataChanged","sizeScale","index","Supercluster","maxZoom","radius","load","data","map","geometry","coordinates","getPosition","properties","this","setState","z","context","viewport","zoom","state","getClusters","info","mode","pickedObject","object","cluster","objects","getLeaves","cluster_id","f","iconAtlas","iconMapping","IconLayer","getSubLayerProps","id","getIcon","point_count","ct","casualty_type","substring","toLowerCase","cs","accident_severity","opts","iconName","includes","indexOf","getSize","min","CompositeLayer","createBrowserHistory","fetchData","url","callback","fetch","then","response","text","json","JSON","parse","error","catch","console","xyObjectByProperty","property","noNulls","Map","forEach","feature","value","split","length","get","set","sortedMap","from","keys","sort","key","y","generateDeckLayer","name","renderTooltip","options","addOptionsToObject","opt","obj","hexObj","pickable","extruded","elevationScale","onHover","HexagonLayer","scatterObj","opacity","radiusScale","radiusMinPixels","radiusMaxPixels","getRadius","sqrt","exits","getColor","ScatterplotLayer","geojsonObj","stroked","filled","lineWidthScale","lineWidthMinPixels","getFillColor","getLineColor","getLineWidth","getElevation","GeoJsonLayer","iconObj","atlas","mapping","wrapLongitude","sgridObject","cellSizePixels","ScreenGridLayer","gridObject","cellSize","GridLayer","lineObject","LineLayer","arcObject","ArcLayer","pathObject","PathLayer","heatObject","HeatmapLayer","scatterObject","textObject","TextLayer","convertRange","oldValue","values","oldMax","oldMin","newMax","newMin","toFixed","humanize","frags","i","charAt","toUpperCase","slice","join","shortenName","shortened","trim","extension","pop","replace","isURL","a","document","createElement","href","protocol","hostname","isMobile","check","window","innerWidth","navigator","userAgent","vendor","opera","test","substr","colorScale","features","p","alpha","domainIsNumeric","domain","Set","b","col","interpolateOrRd","colorRangeNames","colorRanges","yellowblue","greens","oranges","diverge","inverseDefault","default","getMax","arr","reduce","max","v","Infinity","getMin","OSMTILES","RBDropDown","title","hasOwnProperty","menuitems","_generateMenuItems","bind","entry","MenuItem","className","divider","eventKey","classNames","keyIsArray","DropdownButton","style","width","onSelect","event","onSelectCallback","React","Component","MapboxBaseLayers","bases","selected","DateTime","require","sfType","geojson","type","getPropertyValues","all","each","add","useState","setValue","filter","multiVarSelect","single","labelKey","valueKey","placeholder","maxDropdownHeight","TYPE","search","multi","onChange","e","what","Variables","unfilteredData","columns","setColumns","description","v_type","fromFormat","isValid","fromISO","fromHTTP","fromMillis","Date","describeFeatureVariables","dataCols","syncColumns","concat","columnsArray","columnValues","push","MultiSelect","ToastAlert","timeDuration","dismissTimeoutId","clearTimeout","nextProps","alert","time","dismissTimeout","setTimeout","content","Alert","position","maxWidth","minWidth","overflow","wordBreak","zIndex","border","background","color","textAlign","variant","ColorPicker","colourCallback","backgroundColor","onClick","open","setOpen","toggleOpen","component","button","noButton","margin","cursor","fontSize","onClose","isOpen","kind","KIND","secondary","SIZE","compact","DataTable","currentPage","setCurrentPage","numPages","rows","onPageChange","nextPage","UI","checks","sublist","suggested","steps","new_checks","ui_name","UI_LIST","Constants","suggestUIforNumber","ui_returned","checked","s","step","initialState","log","target","FlexibleXYPlot","makeWidthFlexible","XYPlot","SeriesPlot","hint","setHint","setX","setY","x1","setX1","y1","setY1","rect","setRect","setSelected","ReactSeries","MarkSeries","noLimit","dataWithColor","plotStyle","noXAxis","noYAxis","onValueClick","onDragSelected","onMouseDown","clientX","clientY","onMouseMove","newX","newY","left","top","abs","height","onMouseUp","onMouseOut","xType","bottom","marginBottom","animation","duration","onMouseLeave","tickSize","tickFormat","tickValues","item","idx","tickLabelAngle","line","strokeWidth","fill","dark","format","onNearestX","datapoint","innerX","isWithinRect","colorDomain","colorRange","FlexibleTreemap","Treemap","TreeMap","hoveredNode","setHoveredNode","treeProps","damping","stiffness","onLeafMouseOver","onLeafMouseOut","getLabel","H","VIS","generateVIS","column","vis","counts","children","startsWith","VerticalBarSeries","HorizontalBarSeries","LineSeries","AddVIS","setColumn","setVis","list","setList","noAccordion","plot","j","expanded","URL","PRD_URL","DeckSidebar","RADIUS","elevation","ELEVATION","year","reset","barChartVariable","datasetName","subsetBoundsChange","nextState","loading","onChangeRadius","onChangeElevation","toggleSubsetBoundsChange","urlCallback","onlocationChange","notEmpty","columnDomain","columnData","array","sortNumericArray","showLegend","interpolate","jMax","jMin","legend","generateLegend","columnPlot","stroke","generatePercent","prop","clear","cb","float","percentDiv","has","RBAlert","Modal","urlOrName","download","encodeURIComponent","stringify","date","years","YEAR","yearSlider","changes","sub_data","list_copy","propertyCount","Checkbox","Tabs","defaultActiveKey","Tab","t","datapoints","LAYERSTYLES","layerStyle","mvs","onSubmit","location","preventDefault","boundingbox","bbox","num","lon","lat","FormGroup","InputGroup","FormControl","Addon","Glyphicon","glyph","HexHeatmap","offset","strokeLinejoin","fontWeight","useEffect","sizeProperty","marginRight","marginLeft","result","hex","setHex","o","toggleHexPlot","h","HexPlot","MultiLinePlot","_","orientation","items","Tooltip","_handleWindowSizeChange","forceUpdate","_listPropsAndValues","addEventListener","removeEventListener","hoveredObject","topx","topy","type_feature","severity_keys","points","crashes_data","severity_data_separate","severity_by_year","key2","k2","assign","propertyCountByProperty","kk","innerHeight","DATA","gradient","LIGHT_SETTINGS","lightsPosition","ambientRatio","diffuseRatio","specularRatio","lightsStrength","numberOfLights","Welcome","init","longitude","latitude","pitch","bearing","param","qsResult","qs","lng","pit","bea","alt","getParamsFromSearch","iKey","layers","backgroundImage","mapStyle","initialViewState","colourName","iconLimit","_generateLayer","_renderTooltip","_fetchAndUpdateState","_fitViewport","_updateURL","_throttleUR","throttle","MAPBOX_ACCESS_TOKEN","on","brewer","addSource","lastSymbolId","getStyle","addLayer","addLayerToMap","process","aURL","customError","fitView","fullURL","message","cn","coords","filtered","geomType","filterValues","filterCoords","nextValue","difference","flat","switchToIcon","lightSettings","columnNameOrIndex","getPath","getSourcePosition","getTargetPosition","colArray","getWidth","cols","SPENSER","alayer","tooltip","road_type","newData","bboxLonLat","bounds","center","centroid","fitBounds","padding","transitionDuration","transitionInterpolator","FlyToInterpolator","altitude","pathname","history","updateHistory","getBounds","box","xmin","_sw","xmax","_ne","ymin","ymax","getBbx","r","u","visibility","endsWith","ref","getMap","onViewportChange","onInteractionStateChange","isDragging","inTransition","isRotating","isZooming","isHovering","isPanning","_fetchDataWithBounds","viewState","layer","evt","DeckSidebarContainer","url_returned","geojson_returned","navs","to","withRouter","setDark","Navbar","inverse","collapseOnSelect","Header","Brand","Link","Toggle","Collapse","Nav","NavItem","pullRight","toggleTheme","viewBox","aria-hidden","transform","fillRule","clipRule","About","markdown","readmePath","marked","dangerouslySetInnerHTML","__html","engine","Styletron","App","theme","DarkTheme","LightTheme","Switch","Route","exact","path","L","Icon","Default","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","ReactDOM","render","BrowserRouter","basename","getElementById","serviceWorker","ready","registration","unregister","define","defineProperty","enumerable"],"mappings":"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","file":"static/js/main.c9738c81.chunk.js","sourcesContent":["/*\nUtility Functions\n\nthanks https://github.com/realm/github-gantt/blob/master/utilities.js\n\n*/\nvar isString = function(x) {\n    return x !== null && x !== undefined && x.constructor === String\n}\n\nvar isNumber = function(x) {\n    return x !== null && x !== undefined && x.constructor === Number\n}\n\nvar isBoolean = function(x) {\n    return x !== null && x !== undefined && x.constructor === Boolean\n}\n\nvar isObject = function(x) {\n    return x !== null && x !== undefined && x.constructor === Object\n}\n\nvar isArray = function(x) {\n    return x !== null && x !== undefined && x.constructor === Array\n}\n\nvar isDate = function(d) {\n  if ( Object.prototype.toString.call(d) === \"[object Date]\" ) {\n    if ( isNaN( d.getTime() ) ) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else {\n    return false;\n  }\n}\n\n// var isRealmObject = function(x) {\n//     return x !== null && x !== undefined && x.constructor === Realm.Object\n// }\n\n// var isRealmList = function(x) {\n//     return x !== null && x !== undefined && x.constructor === Realm.List\n// }\n\nvar sanitizeFloat = function(number) {\n    if (isNumber(number)) {\n        return number;\n    }\n    else if (isString(number)) {\n        let n = parseFloat(number);\n        if (isNaN(n)) {\n          return null;\n        }\n        else {\n          return n;\n        }\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeInt = function(number) {\n    if (isNumber(number)) {\n        return number;\n    }\n    else if (isString(number)) {\n        return parseInt(number);\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeString = function(string) {\n    if (isString(string)) {\n        return string;\n    }\n    else if (isNumber(string)) {\n        return string.toString();\n    }\n    else {\n        return null;\n    }\n}\n\nvar sanitizeStringNonNull = function(string) {\n    if (isString(string)) {\n        return string;\n    }\n    else if (isNumber(string)) {\n        return string.toString();\n    }\n    else {\n        return \"\";\n    }\n}\n\nvar sanitizeBool = function(bool) {\n    if (isBoolean(bool)) {\n        return bool;\n    }\n    else if (isNumber(bool)) {\n        return Boolean(bool);\n    }\n    else {\n        return null;\n    }\n}\n\nfunction isEmptyOrSpaces(str){\n  return str === null || str.match(/^ *$/) !== null;\n}\n\nexports.isString = isString;\nexports.isNumber = isNumber;\nexports.isBoolean = isBoolean;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isDate = isDate;\n// exports.isRealmObject = isRealmObject;\n// exports.isRealmList = isRealmList;\nexports.sanitizeFloat = sanitizeFloat;\nexports.sanitizeInt = sanitizeInt;\nexports.sanitizeString = sanitizeString;\nexports.sanitizeStringNonNull = sanitizeStringNonNull;\nexports.sanitizeBool = sanitizeBool;\nexports.isEmptyOrSpaces = isEmptyOrSpaces;","module.exports = __webpack_public_path__ + \"static/media/icons.4a1946be.png\";","module.exports = __webpack_public_path__ + \"static/media/notes.ed02f619.md\";","import {CompositeLayer} from '@deck.gl/core';\nimport {IconLayer} from '@deck.gl/layers';\nimport { options } from 'marked';\nimport Supercluster from 'supercluster';\n\nfunction getIconName(size) {\n  if (size === 0) {\n    return '';\n  }\n  if (size < 10) {\n    return `marker-${size}`;\n  }\n  if (size < 100) {\n    return `marker-${Math.floor(size / 10)}0`;\n  }\n  return 'marker-100';\n}\n\nfunction getIconSize(size) {\n  return Math.min(100, size) / 100 + 1;\n}\n\nexport default class IconClusterLayer extends CompositeLayer {\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    const rebuildIndex = changeFlags.dataChanged || props.sizeScale !== oldProps.sizeScale;\n\n    if (rebuildIndex) {\n      const index = new Supercluster({maxZoom: 16, radius: props.sizeScale});\n      index.load(\n        props.data.map(d => ({\n          geometry: {coordinates: props.getPosition(d)},\n          properties: d\n        }))\n      );\n      this.setState({index});\n    }\n\n    const z = Math.floor(this.context.viewport.zoom);\n    if (rebuildIndex || z !== this.state.z) {\n      this.setState({\n        data: this.state.index.getClusters([-180, -85, 180, 85], z),\n        z\n      });\n    }\n  }\n\n  getPickingInfo({info, mode}) {\n    const pickedObject = info.object && info.object.properties;\n    if (pickedObject) {\n      if (pickedObject.cluster && mode !== 'hover') {\n        info.objects = this.state.index\n          .getLeaves(pickedObject.cluster_id, 25)\n          .map(f => f.properties);\n      }\n      info.object = pickedObject;\n    }\n    return info;\n  }\n\n  renderLayers() {\n    const {data} = this.state;\n    const {iconAtlas, iconMapping, sizeScale} = this.props;\n\n    return new IconLayer(\n      this.getSubLayerProps({\n        id: 'icon',\n        data,\n        iconAtlas,\n        iconMapping,\n        sizeScale,\n        getPosition: d => d.geometry.coordinates,\n        // getIcon: d => getIconName(d.properties.cluster ? d.properties.point_count : 1),\n        getIcon: d => {\n          // console.log(d);\n          if(d.properties.cluster) return getIconName(d.properties.point_count)\n          // now the actual object is returned\n          /*\n          * {geometry:{coordinates:[lon,lat]}, properties:{gejsonObj}}\n          */\n          let ct = d.properties.properties &&\n          d.properties.properties.casualty_type\n          ct = ct && ct.substring(0,2).toLowerCase()\n          let cs = d.properties.properties &&\n          d.properties.properties.accident_severity\n          cs = cs && cs === \"Slight\" ? \"\" : cs.substring(0,1).toLowerCase()\n\n          const opts = [\n            'marker-dr-f', 'marker-pe-f', 'marker-cy-f', 'marker-fam-f',\n            'marker-dr', 'marker-pe', 'marker-cy', 'marker-fam',\n            'marker-dr-s', 'marker-pe-s', 'marker-cy-s', 'marker-fam-s',\n          ]\n          const iconName = \"marker-\" + ct + (cs ? (\"-\" + cs) : \"\");\n          if(opts.includes(iconName)) return opts[opts.indexOf(iconName)]\n          return getIconName(1)\n        },\n        getSize: d => getIconSize(d.properties.cluster ? d.properties.point_count : 1)\n      })\n    );\n  }\n}\n","// https://github.com/ReactTraining/react-router/blob/master/FAQ.md#how-do-i-access-the-history-object-outside-of-components\n// history.js\nimport { createBrowserHistory } from 'history'\nexport default createBrowserHistory()","import React from 'react';\nimport {\n  ScatterplotLayer, HexagonLayer, GeoJsonLayer,\n  ScreenGridLayer, GridLayer, LineLayer,\n  HeatmapLayer,\n  TextLayer\n} from 'deck.gl';\nimport {\n  interpolateOrRd, // schemeBlues\n} from 'd3-scale-chromatic';\n\nimport qs from 'qs'; // warning: importing it otherways would cause minificatino issue.\n\nimport mapping from './location-icon-mapping.json';\nimport atlas from './img/icons.png'\nimport Constants from './Constants';\nimport { isString, isNumber } from './JSUtils.js';\nimport IconClusterLayer from './icon-cluster-layer';\nimport { ArcLayer, PathLayer } from '@deck.gl/layers';\nimport history from './history';\n\nconst getResultsFromGoogleMaps = (string, callback) => {\n\n  if (typeof (string) === 'string' && typeof (callback) === 'function') {\n    let fullURL = \"https://maps.googleapis.com/maps/api/geocode/json?address=\" +\n      string\n      + \"&key=WRONG_KEY\";\n    // console.log(fullURL);\n    fetch(fullURL)\n      .then((response) => {\n        if (response.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' +\n            response.status);\n          return;\n        }\n        // Examine the text in the response\n        response.json()\n          .then((data) => {\n            //rouch search results will do.\n            if (data.results.length === 0 || response.status === 'ZERO_RESULTS') {\n              callback(response.status);\n            } else {\n              callback(data.results[0].geometry.location)\n            }\n          });\n      })\n      .catch((err) => {\n        console.log('Fetch Error :-S', err);\n      });\n\n  }\n  //ignore\n};\n\nconst fetchData = (url, callback) => {\n  fetch(url) // [0] => \"\", [1] => roads and [2] => qfactor\n    .then((response) => response.text())\n    .then((response) => {\n      try {\n        const json = JSON.parse(response);\n        // console.log(json);\n        callback(json)\n      } catch (error) {\n        callback(undefined, error)\n      }\n    })\n    .catch((error) => {\n      console.error(error);\n      callback(null, error)\n    });\n\n}\n\n/**\n * Function to count frequency of values of `property` given.\n * \n * TODO: Double check to see if it is slightly different\n * version of propertyCount\n * \n * \n * @param {Object} data \n * @param {String} property \n * @param {Boolean} noNulls \n */\nconst xyObjectByProperty = (data, property, noNulls = true) => {\n  if (!data || !property) return;\n  //data = [{...data = 12/12/12}]       \n  const map = new Map()\n  data.forEach(feature => {\n    let value = feature.properties[property];\n    // still hardocoded, using .getYear might be better but not\n    // perfect\n    if (typeof (value) === 'string' &&\n    value.split(\"-\").length === 3) {\n      value = +(value.split(\"-\")[0])\n    }\n    if (noNulls && value !== null) { // remove nulls here\n      if (map.get(value)) {\n        map.set(value, map.get(value) + 1)\n      } else {\n        map.set(typeof value === 'number' ? +(value) : value, 1)\n      }\n    }\n  });\n  const sortedMap = typeof Array.from(map.keys())[0] === 'number' ?\n    Array.from(map.keys()).sort() : Array.from(map.keys())\n\n  return sortedMap.map(key => {\n    return (\n      {\n        x: key,\n        y: +(map.get(key))\n      }\n    )\n  })\n}\n\nconst generateDeckLayer = (name, data, renderTooltip, options) => {\n  const addOptionsToObject = (opt, obj) => {\n    Object.keys(opt).forEach(key =>\n      obj[key] = opt[key]\n    )\n  }\n  if (name === 'hex') {\n    const hexObj = {\n      id: 'hexagon-layer',\n      data: data,\n      pickable: true,\n      extruded: true,\n      radius: 100,\n      elevationScale: 1,\n      getPosition: d => d.geometry.coordinates,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, hexObj)\n    return (new HexagonLayer(hexObj))\n  } else if (name === 'hex') {\n    const scatterObj = {\n      id: 'scatterplot-layer',\n      data,\n      pickable: true,\n      opacity: 0.8,\n      radiusScale: 6,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 100,\n      getPosition: d => d.geometry.coordinates,\n      getRadius: d => Math.sqrt(d.exits),\n      getColor: d => [255, 140, 0],\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, scatterObj)\n    return (new ScatterplotLayer(scatterObj))\n  } else if (name === 'geojson') {\n    const geojsonObj = {\n      id: 'geojson-layer',\n      data,\n      pickable: true,\n      stroked: false,\n      filled: true,\n      extruded: true,\n      lineWidthScale: 20,\n      lineWidthMinPixels: 2,\n      getFillColor: [160, 160, 180, 200],\n      getLineColor: [255, 160, 180, 200],\n      getRadius: 100,\n      getLineWidth: 1,\n      getElevation: 30,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, geojsonObj)\n    return (new GeoJsonLayer(geojsonObj))\n  } else if (name === 'icon') {\n    // console.log(data);\n\n    //icon from https://github.com/uber/deck.gl/blob/8d5b4df9e4ad41eaa1d06240c5fddb922576ee21/website/src/static/images/icon-atlas.png\n    const iconObj = {\n      id: 'icon-layer',\n      data,\n      pickable: true,\n      iconAtlas: atlas,\n      iconMapping: mapping,\n      sizeScale: 60,\n      getPosition: d => d.geometry.coordinates,\n      wrapLongitude: true,\n      // getIcon: d => 'marker-1',\n      // getSize: d => 5,\n      // getColor: d => [Math.sqrt(d.exits), 140, 0],\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, iconObj)\n    return (new IconClusterLayer(iconObj))\n  } else if (name === 'sgrid') {\n    const sgridObject = {\n      id: 'screen_grid',\n      data,\n      getPosition: d => d.geometry.coordinates,\n      // getWeight: d => d.properties.weight,\n      cellSizePixels: 4,\n      // colorRange,\n      // gpuAggregation,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, sgridObject)\n    return (new ScreenGridLayer(sgridObject))\n  } else if (name === 'grid') {\n    const gridObject = {\n      id: 'screen_grid',\n      data,\n      pickable: true,\n      extruded: true,\n      cellSize: 100,\n      elevationScale: 4,\n      getPosition: d => d.geometry.coordinates,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, gridObject)\n    return (new GridLayer(gridObject))\n  } else if (name === 'line') {\n    const lineObject = {\n      id: 'line-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, lineObject)\n    return (new LineLayer(lineObject))\n  } else if (name === 'arc') {\n    const arcObject = {\n      id: 'arc-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n      // getSourcePosition: d => d.geometry.coordinates[0],\n      // getTargetPosition: d => d.geometry.coordinates[1],\n    }\n    addOptionsToObject(options, arcObject)\n    return (new ArcLayer(arcObject))\n  } else if (name === 'path') {\n    const pathObject = {\n      id: 'path-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip\n    }\n    addOptionsToObject(options, pathObject)\n    return (new PathLayer(pathObject))\n  } else if (name === 'heatmap') {\n    const heatObject = {\n      id: 'heatmap-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n    }\n    addOptionsToObject(options, heatObject);\n    return (new HeatmapLayer(heatObject))\n  } else if (name === \"scatterplot\") {\n    const scatterObject = {\n      id: 'scatterplot',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n      opacity: 0.3\n    }\n    addOptionsToObject(options, scatterObject);\n    return (new ScatterplotLayer(scatterObject))\n  } else if (name === \"text\") {\n    const textObject = {\n      id: 'text-layer',\n      data,\n      pickable: true,\n      onHover: renderTooltip,\n    }\n    addOptionsToObject(options, textObject);\n    return (new TextLayer(textObject))\n  }\n\n  return (null)\n}\n\nconst getCentroid = (coords) => {\n  let center = coords.reduce((x, y) => {\n    return [x[0] + y[0] / coords.length, x[1] + y[1] / coords.length]\n  }, [0, 0])\n  center = [parseFloat(center[1].toFixed(3)), parseFloat(center[0].toFixed(3))]\n  return center;\n}\n\nconst convertRange = (oldValue = 2, values = {\n  oldMax: 10, oldMin: 1,\n  newMax: 1, newMin: 0\n}) => {\n  // thanks to https://stackoverflow.com/a/929107/2332101\n  // OldRange = (OldMax - OldMin)  \n  // NewRange = (NewMax - NewMin)  \n  // NewValue = (((OldValue - OldMin) * NewRange) / OldRange) + NewMin\n  let value = (((oldValue - values.oldMin) * (values.newMax - values.newMin))\n    / (values.oldMax - values.oldMin)) + values.newMin\n  return +value.toFixed(2)\n}\n\nconst getParamsFromSearch = (search) => {\n  if (!search) return (null);\n\n  const qsResult = qs.parse(search.replace(\"?\", \"\"))\n  // 3 decimal points is street level\n  const lat = Number(qsResult.lat).toFixed(3);\n  const lng = Number(qsResult.lng).toFixed(3);\n  return ({\n    latitude: !isNaN(lat) ? Number(lat) : 53.8321,\n    longitude: !isNaN(lng) ? Number(lng) : -1.6362,\n    zoom: Number(qs.parse(search).zoom) || 10,\n    pit: Number(qs.parse(search).pit) || 55,\n    bea: Number(qs.parse(search).bea) || 0,\n    alt: Number(qs.parse(search).alt) || 1.5,\n  })\n};\n\nconst getBbx = (bounds) => {\n  if (!bounds) return null;\n  // xmin = -1.6449\n  // ymin = 53.82925\n  // xmax = -1.6270\n  // ymax = 53.8389\n  let xmin = bounds._sw.lng;\n  let xmax = bounds._ne.lng;\n  let ymin = bounds._sw.lat;\n  let ymax = bounds._ne.lat;\n  if (xmin > xmax) {\n    xmax = bounds._sw.lng;\n    xmin = bounds._ne.lng;\n  }\n  if (ymin > ymax) {\n    ymax = bounds._sw.lat;\n    ymin = bounds._ne.lat;\n  }\n  return ({ xmin, ymin, xmax, ymax })\n}\n\nconst suggestDeckLayer = (geojson) => {\n  // basic version should suggest a layer\n  // based on the geojson data types\n  // go through each feature? in case of features.\n\n}\nconst suggestUIforNumber = (number) => {\n  // \"checkbox\",     \n  // \"radio\",        \n  // \"buttongroups\", \n  // \"dropdown\",     \n  // \"slider\"])      \n  const { UI_LIST } = Constants;\n  if (!number) return UI_LIST[1];\n  if (number === 1) {\n    return UI_LIST[0];\n  } else if (number > 3 && number <= 6) {\n    return UI_LIST[1];\n  } else if (number === 2 || number === 3) {\n    return UI_LIST[2];\n  } else if (number > 9 && number < 15) {\n    return UI_LIST[3];\n  } else {\n    return UI_LIST[4]; // slider\n  }\n}\n\n/**\n * Changes a `_` separated `str` to space separated and\n * camel cases all words\n * \n * @param {*} str \n */\nconst humanize = (str) => {\n  if (!str) return str\n  let frags = str.split('_');\n  for (let i = 0; i < frags.length; i++) {\n    frags[i] = frags[i].charAt(0).toUpperCase() + frags[i].slice(1);\n  }\n  return frags.join(' ');\n}\n\nconst shortenName = (name, n = 26) => {\n  if (isNumber(name)) {\n    return parseFloat(Number.parseFloat(name).toFixed(2).toString())\n  }\n  if (!name || name.length <= n || !isString(name)) return name;\n  let shortened = name.trim();\n  const extension = name.split('.').length > 1 &&\n    name.split('.').pop().length < 10 && name.split('.').pop();\n  shortened.replace(extension, \"\");\n  if (name.length > 10) {\n    shortened = shortened.substring(0, 10) + \"...\" + (extension || \"\")\n  }\n  return (shortened);\n}\n\nconst percentDiv = (title, left, cb, dark, n = 3) => {\n  return (\n    <div\n      key={title}\n      onClick={() => typeof (cb) === 'function' && cb()}\n      style={{\n        cursor: 'pointer',\n        textAlign: 'center',\n        position: 'relative',\n        float: 'left',\n        width: (isNumber(n) ? 90/n : 90/3) + '%',\n        color: dark ? 'white' : 'black',\n        margin: '10px 2px',\n        border: '1px solid gray',\n      }}>\n      <span style={{ position: 'absolute', left: '10%' }}>\n        {title}\n      </span>\n      <div style={{\n        width: left + '%',\n        height: 20,\n        background: 'rgb(18, 147, 154)',\n        // background: 'rgb(200, 120, 0)'\n      }}>\n      </div>\n    </div>\n  )\n}\n\n/**\n * Thanks to https://stackoverflow.com/a/34695026/2332101\n * @param {*} str \n */\nconst isURL = (str) => {\n  var a = document.createElement('a');\n  a.href = str;\n  return (a.protocol && a.hostname);\n}\n\nconst isMobile = function () {\n  var check = false;\n  if (window.innerWidth < 640) return true;\n  (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\n\nfunction hexToRgb(hex) {\n  let bigint = parseInt(hex.substring(1, hex.length), 16);\n  let r = (bigint >> 16) & 255;\n  let g = (bigint >> 8) & 255;\n  let b = bigint & 255;\n\n  return 'rgb(' + r + \",\" + g + \",\" + b + \")\";\n}\n\n/**\n * Generate colour scale for unique set of values\n * based on the index of the values in an array.\n * \n * @param {object} d particular property to get color for from features\n * @param {*} features features in a geojson featureset\n * @param {*} p index/name of column to generate color scale with\n * @param {Number} alpha value to add to colour pallete\n */\nconst colorScale = (d, features, p = 0, alpha = 180) => {\n  if (!d || !features || features.length === 0) return null;\n  const x = isNumber(p) ? Object.keys(d.properties)[p] : p;\n  let domainIsNumeric = true;\n  let domain = features.map(feature => {\n    // uber move to show isochrones\n    const i = feature.properties[x];\n    if (isNumber(i) &&\n      p === 'Mean.Travel.Time..Seconds.') {\n      return (Math.floor(i / 300))\n    } else if (domainIsNumeric && !isNumber(i)) {\n      // stop getting here if already been\n      domainIsNumeric = false;\n    }\n    return isNumber(i) ? +(i) : i\n  })\n  domain = Array.from(new Set(domain))\n  // sort the domain if possible\n  if (domainIsNumeric) {\n    domain = domain.sort((a, b) => { return (a - b) })\n  }\n  const index = domain.indexOf(isNumber(d.properties[x]) &&\n    p === 'Mean.Travel.Time..Seconds.' ?\n    Math.floor(d.properties[x] / 300) : d.properties[x])\n  // console.log(domain, index)\n  let col = interpolateOrRd(index / domain.length);\n  col = col.substring(4, col.length - 1)\n    .replace(/ /g, '')\n    .split(',').map(x => +x); // deck.gl 8 int not strings\n  return [...col, alpha]\n}\n\nconst colorRangeNames = ['inverseDefault', 'yellowblue', 'greens',\n  'oranges', 'diverge', 'default'];\n\nconst colorRanges = (name) => {\n  if (!name) return\n  const colors = {\n    yellowblue: [\n      [255, 255, 204],\n      [199, 233, 180],\n      [127, 205, 187],\n      [65, 182, 196],\n      [44, 127, 184],\n      [37, 52, 148]\n    ],\n    greens: [\n      [237, 248, 233],\n      [199, 233, 192],\n      [161, 217, 155],\n      [116, 196, 118],\n      [49, 163, 84],\n      [0, 109, 44],\n    ],\n    oranges: [\n      [254, 237, 222],\n      [253, 208, 162],\n      [253, 174, 107],\n      [253, 141, 60],\n      [230, 85, 13],\n      [166, 54, 3],\n    ],\n    diverge: [\n      [140, 81, 10],\n      [216, 179, 101],\n      [246, 232, 195],\n      [199, 234, 229],\n      [90, 180, 172],\n      [1, 102, 94]\n    ],\n    inverseDefault: [\n      [189, 0, 38],\n      [240, 59, 32],\n      [253, 141, 60],\n      [254, 178, 76],\n      [254, 217, 118],\n      [255, 255, 178]\n    ],\n    default: [\n      [255, 255, 178],\n      [254, 217, 118],\n      [254, 178, 76],\n      [253, 141, 60],\n      [240, 59, 32],\n      [189, 0, 38],\n    ]\n  }\n  return (colors[name])\n}\n\nconst iconJSType = (dataType) => {\n  // describeFeatureVariables in geojsonutils\n  // String, Number, Boolean and Object\n  if (!dataType) return (null)\n  switch (dataType) {\n    case \"String\":\n      dataType = \"fa fa-globe\";\n      break;\n    case \"Number\":\n      dataType = \"fa fa-list\";\n      break;\n    case \"Object\":\n      dataType = \"fa fa-sack\";\n      break;\n    default:\n      dataType = \"fa fa-question-circle\";\n  }\n  return dataType\n}\n\nconst searchNominatom = (location, callback) => {\n  const url = \"https://nominatim.openstreetmap.org/search/\" +\n    location + \"?format=json\";\n  fetchData(url, (json) => {\n    typeof callback === 'function' && callback(json)\n  })\n}\n\n/**\n * \n * @param {*} options \n */\nconst generateLegend = (options) => {\n  //quick check \n  const { domain, interpolate = interpolateOrRd, title } = options;\n  if (!domain || !Array.isArray(domain) || !isNumber(domain[0])) return\n  const jMax = domain[domain.length - 1], jMin = domain[0];\n  const legend = [<p key='title'>{title}</p>]\n\n  for (var i = 0; i < 10; i += 1) {\n    legend.push(\n      <>\n        {i === 0 &&\n          <i>{(title === humanize('Mean.Travel.Time..Seconds.') ?\n            +(jMin) / 300 : jMin).toFixed(2)\n          }</i>\n        }\n        <span key={i} style={{ background: interpolate(i / 10) }}>\n        </span>\n        {i === 9 &&\n          <i>{(title === humanize('Mean.Travel.Time..Seconds.') ?\n            +(jMax) / 300 : jMax).toFixed(2)\n          }</i>\n        }\n      </>)\n  }\n  return legend;\n}\n\n/**\n * \n * @param {*} data features from a geojson object\n * @param {*} column \n */\nconst generateDomain = (data, column) => {\n  if (!data || !Array.isArray(data) || !column ||\n    !isString(column) || data.length === 0) return;\n\n  let domainIsNumeric = true;\n  let domain = data.map(feature => {\n    // uber move to show isochrones\n    const i = feature.properties[column];\n    if (isNumber(i) &&\n      column === 'Mean.Travel.Time..Seconds.') {\n      return (Math.floor(i / 300));\n    }\n    return isNumber(i) ? +(i) : i;\n  });\n  domain = Array.from(new Set(domain));\n  // sort the domain if possible\n  if (domainIsNumeric) {\n    domain = domain.sort((a, b) => { return (a - b); });\n  }\n  return domain\n}\n\nconst sortNumericArray = (array) => {\n  let domainIsNumeric = true;\n  // sort the domain if possible\n  array.map(e => !isNumber(e) && (domainIsNumeric = false))\n  if (domainIsNumeric) {\n    array = array.sort((a, b) => { return (a - b); });\n  }\n  return array\n}\n\nconst getMax = (arr) => {\n  return arr.reduce((max, v) => max >= v ? max : v, -Infinity);\n}\nconst getMin = (arr) => {\n  return arr.reduce((max, v) => max <= v ? max : v, Infinity);\n}\n\nconst addLayerToMap = (map, MAPBOX_ACCESS_TOKEN) => {\n  const URL = (process.env.NODE_ENV === 'development' ? \n  Constants.DEV_URL : Constants.PRD_URL);\n  if(!map || !map.on) return null;\n  map.on(\"load\", (e) => {\n    const brewer = !MAPBOX_ACCESS_TOKEN ? [\n      '#ffffcc','#ffeda0','#fed976',\n      '#feb24c','#fd8d3c','#fc4e2a',\n      '#e31a1c','#bd0026','#800026'\n    ] : [\n      '#fff5f0','#fee0d2','#fcbba1',\n      '#fc9272','#fb6a4a','#ef3b2c',\n      '#cb181d','#a50f15','#67000d'];\n    e.target.addSource('vt', {\n      'type': 'vector',\n      'tiles': [\n        URL + '/rnet_cycling/{z}/{x}/{y}.pbf'\n      ],\n      'minzoom': 0,\n      'maxzoom': 11\n    });\n    const layers = e.target.getStyle().layers;\n    var lastSymbolId;\n    for (var i = 0; i < layers.length; i++) {\n      if (layers[i].type === 'symbol') {\n        lastSymbolId = layers[i].id;\n        // break; first!\n      }\n    }\n    e.target.addLayer(\n      {\n        'id': 'vt',\n        'type': 'line',\n        'source': 'vt',\n        'source-layer': 'rnet_cycling',\n        'layout': {\n          'line-cap': 'round',\n          'line-join': 'round'\n        },\n        'paint': {\n          'line-opacity': 0.6,\n          'line-color': [\n            'case',\n            ['<', ['get', 'bicycle'], 10],\n            brewer[0],\n            ['<', ['get', 'bicycle'], 50],\n            brewer[1],\n            ['<', ['get', 'bicycle'], 100],\n            brewer[2],\n            ['<', ['get', 'bicycle'], 500],\n            brewer[3],\n            ['<', ['get', 'bicycle'], 700],\n            brewer[4],\n            ['<', ['get', 'bicycle'], 1000],\n            brewer[5],\n            ['<', ['get', 'bicycle'], 10000],\n            brewer[8],\n                  /* other */ '#ccc'\n          ],\n          'line-width': 3\n        }\n      },\n      MAPBOX_ACCESS_TOKEN ? 'waterway-label' : lastSymbolId\n    );\n  });\n}\n\nconst OSMTILES = {\n  \"version\": 8,\n  \"sources\": {\n    \"simple-tiles\": {\n      \"type\": \"raster\",\n      \"tiles\": [\n        // \"http://tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        // \"http://b.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        // \"http://tile.stamen.com/toner/{z}/{x}/{y}.png\"\n        'https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.jpg'\n      ],\n      \"tileSize\": 256\n    }\n  },\n  \"layers\": [{\n    \"id\": \"simple-tiles\",\n    \"type\": \"raster\",\n    \"source\": \"simple-tiles\",\n  }]\n};\n\n/**\n * Gently update browser history using a DeckGL/mapbox\n * viewport object.\n * \n * @param {*} viewport \n * @returns \n */\n const updateHistory = (viewport) => {\n  if(!viewport) return;\n  const { latitude, longitude, zoom, bearing, pitch, altitude } = viewport;\n  // TODO only update those that are given\n  const search = `?lat=${latitude.toFixed(3)}` +\n    `&lng=${longitude.toFixed(3)}` +\n    `&zoom=${zoom.toFixed(2)}` +\n    `&bea=${bearing}` +\n    `&pit=${pitch}` +\n    `&alt=${altitude}`;\n  const entry = {\n    pathname: history.location.pathname,\n    search\n  };\n  !history.location.search ?\n    // there is at least one service which behaves this way\n    history.push(entry) : history.replace(entry);\n}\n\nexport {\n  getResultsFromGoogleMaps,\n  getParamsFromSearch,\n  xyObjectByProperty,\n  suggestUIforNumber,\n  generateDeckLayer,\n  suggestDeckLayer,\n  sortNumericArray,\n  colorRangeNames,\n  searchNominatom,\n  generateLegend,\n  generateDomain,\n  addLayerToMap,\n  updateHistory,\n  convertRange,\n  getCentroid,\n  shortenName,\n  colorRanges,\n  percentDiv,\n  iconJSType,\n  colorScale,\n  fetchData,\n  OSMTILES,\n  humanize,\n  isMobile,\n  getBbx,\n  getMin,\n  getMax,\n  isURL,\n}","import React from 'react';\nimport { MenuItem, DropdownButton } from 'react-bootstrap';\n\nimport { humanize } from '../utils';\n\nexport default class RBDropDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: props.hasOwnProperty('title') ? props.title : \"No Title\",\n      menuitems: props.hasOwnProperty('menuitems') ? props.menuitems : []\n    }\n    this._generateMenuItems = this._generateMenuItems.bind(this);\n  }\n\n  _generateMenuItems(menuitems) {\n    const isArray = menuitems && typeof (menuitems[0]) !== 'string';\n    return menuitems.map((entry, i) => {\n      let key, value;\n      if (isArray) {\n        key = Object.keys(entry)[0];\n        value = Object.values(entry)[0];\n      }\n      if ((!isArray && entry === \"\") ||\n        (isArray && key === \"\" && value === \"\")) {\n        return (<MenuItem\n          className=\"mi-class\" key={i} divider />);\n      }\n      else {\n        return (<MenuItem\n          className=\"mi-class\" key={i} eventKey={entry // the object\n          }>\n          {humanize(isArray ? value : entry)}\n        </MenuItem>);\n      }\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.hasOwnProperty('title') && props.title !== state.title) {\n      return {\n        title: props.title\n      }\n    }\n    if (props.hasOwnProperty('menuitems') && props.menuitems.length !== state.menuitems.length) {\n      return {\n        menuitems: props.menuitems\n      }\n    }\n    return null\n  }\n\n  render() {\n    const { title, menuitems } = this.state;\n    const { size, classNames } = this.props;\n    const keyIsArray = menuitems && typeof (menuitems[0]) !== 'string';\n\n    // console.log(title);\n    if (!menuitems || menuitems.length === 0) {\n      return (null)\n    }\n\n    return (\n      <DropdownButton\n        style={{ width: '100%' }}\n        title={title}\n        className={typeof (classNames) === 'object'\n          && classNames.length > 0 ? classNames.join(\" \") : classNames}\n        id={typeof (size) === 'string' ? size : \"dropdown-size-medium\"}\n        onSelect={(event) => {\n          //update title\n          this.setState({\n            title: keyIsArray ? Object.values(event)[0] : event\n          })\n          if (typeof (this.props.onSelectCallback) === 'function') {\n            this.props.onSelectCallback(keyIsArray ? Object.values(event)[0] : event)\n          }\n          //die gracefully\n        }}>\n        {\n          this._generateMenuItems(menuitems)\n        }\n      </DropdownButton>\n    )\n  }\n}\n","import React from 'react';\nimport RBDropDown from './RBDropdownComponent';\n\nexport default class MapboxBaseLayers extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            bases: [\n                'dark',\n                'basic',\n                'streets',\n                'bright',\n                'light',\n                'satellite',\n                'No map'\n            ],\n            selected: 'dark'\n        }\n    }\n\n    render() { \n        const {selected, bases} = this.state;\n        const {onSelectCallback} = this.props;\n        // console.log(selected);\n        \n        return(\n            <RBDropDown\n                title={selected === 'dark' ? \"Default(dark)\" : selected}\n                menuitems={bases}\n                onSelectCallback= {(selected) => {\n                    this.setState({selected});\n                    typeof(onSelectCallback) === 'function' &&\n                    onSelectCallback(selected)\n                }}\n            />\n        )\n    }\n}","import {\n  isNumber, isBoolean, isObject,\n  isDate, isString\n} from './JSUtils';\n\nconst { DateTime } = require(\"luxon\");\n\n// thanks turfjs\n//http://wiki.geojson.org/GeoJSON_draft_version_6\nconst sfType = (geojson) => {\n  if (geojson.type === \"FeatureCollection\") { return \"FeatureCollection\"; }\n  if (geojson.type === \"GeometryCollection\") { return \"GeometryCollection\"; }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\n\nconst properties = (geojson) => {\n  if (!geojson || !geojson.features) return null;\n  var properties = geojson.features[0].properties;\n  return Object.keys(properties);\n}\n\n/**\n * Find all columns which can be considered as key columns.\n * Using `getPropertyValues` we compare the length with\n * geojson objects and determin which olumn can be considered as key.\n * \n * @param {Object} geojson to process\n * @returns array of keys or null if none.\n */\nconst getKeyColumns = (geojson) => {\n  if (!geojson || !geojson.features) return null;\n  const keys = [];\n  const all_property_counts = getPropertyValues(geojson);\n  Object.keys(all_property_counts).forEach(column => {\n    if (Array.from(all_property_counts[column]).length ===\n      geojson.features.length) {\n      keys.push(column);\n      // if property values of column === geojson.features\n      // must be unique      \n    }\n  })\n  return keys.length > 0 ? keys : null;\n}\n\n/**\n * Given an array of [E010000001, S010000001] the function checks\n * all values within the array and returns true if all matches\n * pattern for UK ONS codes.\n * See https://en.wikipedia.org/wiki/ONS_coding_system\n * \n * @param {*} array \n */\nconst isONSCode = (array) => {\n  if (!array || array.length === 0) return false;\n  let result = true;\n  array.forEach(e => {\n    if (!isString(e) || e.length !== 9 || !e.match(/^[EWS]\\d{2}.{6}$/)) {\n      result = false;\n    }\n  })\n  return result;\n}\n/**\n * {some: data, another: value}\n * turn it into {some: type, another: type}\n * @param {Object} feature \n */\nconst describeFeatureVariables = (feature) => {\n  if (!feature || feature.type !== 'Feature') return null;\n  const description = {};\n\n  Object.keys(feature.properties).forEach(key => {\n    let v_type = String;\n    const value = feature.properties[key];\n\n    if (isDate(value) ||\n      DateTime.fromFormat(value + '', 'MMMM dd yyyy').isValid ||\n      DateTime.fromFormat(value + '', 'MMMM d yyyy').isValid ||\n      DateTime.fromFormat(value + '', 'MMM d yyyy').isValid ||\n      DateTime.fromFormat(value + '', 'MMM dd yyyy').isValid ||\n      DateTime.fromFormat(value + '', 'dd/MM/yyyy').isValid ||\n      DateTime.fromISO(value).isValid || // \"19-2-1999\"\n      DateTime.fromHTTP(value).isValid ||\n      (typeof value === Number && DateTime.fromMillis(value).isValid)) {\n      v_type = Date\n    } else if (isNumber(value)) {\n      v_type = Number\n    } else if (isBoolean(value)) {\n      v_type = Boolean\n    } else if (isObject(value)) {\n      v_type = Object\n    }\n    description[key] = v_type;\n  })\n  return (description)\n}\n\n/**\n * This function takes a geojson object and optionally a property\n * it returns a set (in array) object of all values for that property.\n * \n * If no property is given it gets all properties\n * of each feature and adds unique values for each in a Set.\n * \n * @param {Object} geojson \n * @param {String} property \n */\nconst getPropertyValues = (geojson, property) => {\n  if (!geojson || !geojson.features) return null;\n  const all = {}\n  let values = new Set();\n  geojson.features.forEach(feature => {\n    Object.keys(feature.properties).forEach((each) => {\n      if (property && property === each) {\n        // if the right property, \n        // add it to the value to be returnd\n        values.add(feature.properties[each])\n      } else {\n        if (typeof (all[each]) === 'object') { // a set\n          all[each].add(feature.properties[each])\n        } else {\n          all[each] = new Set();\n          all[each].add(feature.properties[each])\n        }\n      }\n    })\n  })\n  return property ? Array.from(values) : all;\n}\n\n/**\n * Get a list of {x:property, y:count} objects for a features in \n * a geojson object. The function can return the counts for\n * a specific list provided or it would get all values in \n * the given key/column of the data.\n * \n * @param {Object} data features to loop through. \n * @param {String} key a particular property as key\n * @param {Object} list of values to limit return their counts\n * \n * @returns {Object}\n */\nconst propertyCount = (data, key, list) => {\n  if (!data || !key) return;\n  let sub_data = []; // match it with list\n  let list_copy = list;\n  if (!list || list.length === 0) {\n    list_copy = getPropertyValues({\n      features: data\n    }, key)\n  }\n  data.forEach(feature => {\n    Object.keys(feature.properties).forEach(each => {\n      if (each === key) {\n        // create an array matching given list\n        // if no list match first \n        const i = list_copy.indexOf(feature.properties[each]);\n        if (sub_data[i] &&\n          sub_data[i].x === feature.properties[each]) {\n          sub_data[i].y += 1;\n        }\n        else {\n          sub_data[i] = { x: feature.properties[each], y: 1 };\n        }\n      }\n    });\n  });\n  return sub_data;\n}\n\n/**\n * Generate an object with frequency of values of a particular property, arranged\n * under a different property. Given features = \n * [{p1: a, p2: b, p3: v1},\n * {p1: a, p2: b, p3: v1},\n * {p1: b, p2: a, p3: v2},\n * ].\n * The function returns an object {v1: {a: 2, b: 2}, v2: {a:1, b:1}}\n * \n * @param {Object} data features to loop through. \n * @param {String} key a particular property as key\n * @param {Object} list of values to return their counts\n * @param {String} key2 a different property as key\n * @returns {Object} \n */\nconst propertyCountByProperty = (data, key, list, key2) => {\n  if (!data || !key || !list || !key2 || key === key2) return;\n  let sub_data = {} // create object based on key2 values\n  data.forEach(feature => {\n    const k2 = key2 === 'date' &&\n      DateTime.fromFormat(feature.properties[key2] + '', 'yyyy-mm-dd').isValid ?\n      feature.properties[key2].split(\"-\")[0] : feature.properties[key2];\n    Object.keys(feature.properties).forEach(each => {\n      if (each === key) {\n        // create object based on key2 values\n        if (sub_data[k2] && sub_data[k2][feature.properties[each]]) {\n          sub_data[k2][feature.properties[each]] += 1;\n        }\n        else {\n          sub_data[k2] = Object.assign(\n            sub_data[k2] || {}, { [feature.properties[each]]: 1 }\n          );\n        }\n      }\n    });\n  });\n  return sub_data;\n}\n\nconst coordsAsXY = (geojson, sizeProperty) => {\n  if (!geojson.features) return null;\n  return (\n    geojson.features.map(each => {\n      // lon lat please\n      const result = {\n        x: each.geometry.coordinates[0],\n        y: each.geometry.coordinates[1]\n      }\n      if (sizeProperty && each.properties[sizeProperty]) {\n        result.size = each.properties[sizeProperty]\n      }\n      return (result)\n    })\n  )\n}\n\nexport {\n  describeFeatureVariables,\n  propertyCountByProperty,\n  getPropertyValues,\n  getKeyColumns,\n  propertyCount,\n  properties,\n  coordsAsXY,\n  isONSCode,\n  sfType\n}","import React, { useState } from 'react';\nimport { Select, TYPE } from 'baseui/select';\n\nexport default (props) => {\n  const [value, setValue] = useState([]);\n  const { onSelectCallback, values, filter, multiVarSelect,\n    title, single } = props;  \n  return (\n    <Select\n      options={values}\n      labelKey=\"id\"\n      valueKey=\"value\"\n      placeholder={title || \"Choose\"}\n      maxDropdownHeight=\"300px\"\n      type={TYPE.search}\n      multi={!single}\n      onChange={({ value }) => {\n        setValue(value);\n        if (multiVarSelect) {\n          Object.keys(value).length === 0 ? delete multiVarSelect[filter] :\n            // everytime it gives back the chosen list of objects\n            multiVarSelect[filter] = new Set(value.map(e => e.value));\n          typeof onSelectCallback === 'function' &&\n            onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n              { what: '' } : { what: 'multi', selected: multiVarSelect });\n        } else {\n          typeof onSelectCallback === 'function' &&\n          onSelectCallback(value)\n        }\n      }}\n      value={props.value || value}\n    />\n  );\n};","/**\n * eAtlas code\n *  \n * React component which takes a GeoJSON object. Loops through its\n * properties and show the list to start with. Each property \n * can show all avialable values. Each value can be selected/deselected.\n *\n * Current code can deal with only one GeoJSON property's keys.\n * \n * Next is handling multiple GeoJSON key value pairs.\n * Next will be replacing current \"hard\" code in the parent code,\n * so that all key values can be dynamically filtered.\n * \n * This should be generalizeable to any GeoJSON file, or that is the\n * aim.\n */\nimport React, { useState } from 'react';\n\nimport './style.css';\nimport { humanize } from '../utils';\nimport { isEmptyOrSpaces } from '../JSUtils';\nimport { describeFeatureVariables } from '../geojsonutils';\nimport { Select, TYPE } from 'baseui/select';\nimport MultiSelect from './MultiSelect';\n\nexport default function Variables(props) {\n  const { onSelectCallback, multiVarSelect,\n    unfilteredData } = props;\n  const [columns, setColumns] = useState(Object.keys(multiVarSelect))\n\n  if (!unfilteredData) return null;\n  \n  if (unfilteredData && Object.keys(unfilteredData[0].properties)\n    .filter(p => !isEmptyOrSpaces(p)).length === 0) {\n    return (\n      <h3>There are no columns to inspect or filter.</h3>\n    )\n  }\n  // describe first feature\n  const description = describeFeatureVariables(unfilteredData[0]);\n  const dataCols = Object.keys(unfilteredData[0].properties)\n    .filter(e => e !== \"date\") // hardcode\n    .map(e => ({\n      // Format: Column Name [String]\n      id: humanize(e) + \" [\" + description[e].name + \"]\",\n      value: e\n    }))\n\n  // unique set of keys\n  let syncColumns = Array.from(new Set(columns.map(e => e.value).concat(\n    Object.keys(multiVarSelect).filter(e => e !== \"date\") // hardcode\n  )));\n  // populate baseweb objects using description\n  syncColumns = syncColumns.map(e => ({\n    // Format: Column Name [String]\n    id: humanize(e) + \" [\" + description[e].name + \"]\",\n    value: e\n  }))\n  // console.log(columns);\n  // console.log(syncColumns);\n  // use synced column names\n  return (\n    <div style={props.style}>\n      Column to filter:\n      <Select\n        labelKey=\"id\"\n        valueKey=\"value\"\n        placeholder={\"Chose column \" + \"(\" + dataCols.length + \")\"}\n        maxDropdownHeight=\"300px\"\n        type={TYPE.search}\n        multi={true}\n        onChange={({ value }) => {\n          // sync with multiVarSelect \n          // here we remove any key in multiVarSelect that is not \n          // in the values here\n          const columnsArray = value.map(e => e.value)\n          Object.keys(multiVarSelect).map(key => {\n            //delete any that is not in value\n            if (!columnsArray.includes(key)) {\n              delete multiVarSelect[key]\n            }\n          })\n          typeof (onSelectCallback) === 'function' &&\n            onSelectCallback(multiVarSelect)\n          setColumns(value)\n        }}\n        value={syncColumns}\n        options={dataCols}\n      />\n      {\n        syncColumns && syncColumns.map(e => e.value)\n          .map(key => {\n            const columnValues = [];\n            unfilteredData.forEach(feature =>\n              Object.keys(feature.properties).forEach(property =>\n                property === key && feature.properties[key] &&\n                !columnValues.includes(feature.properties[key]) &&\n                columnValues.push(\n                  feature.properties[key]\n                )\n              )\n            )\n            return <>\n              {humanize(key)}\n              <MultiSelect\n                title={\"Available (\" + columnValues.length + \")\"}\n                filter={key}\n                multiVarSelect={multiVarSelect}\n                // all string from here\n                values={columnValues.map(e => ({ id: e + \"\", value: e + \"\" }))}\n                onSelectCallback={(filter) => {\n                  typeof (onSelectCallback) === 'function' &&\n                    onSelectCallback(filter.selected || {});\n                }}\n                value={multiVarSelect[key] &&\n                  Array.from(multiVarSelect[key])\n                    .map(e => ({ id: e + \"\", value: e + \"\" }))\n                }\n              />\n            </>\n          })\n      }\n    </div>\n  )\n}\n","import React, { Component } from 'react';\n\n// react bootstrap\nimport { Alert } from 'react-bootstrap';\n\n// local\n\nclass ToastAlert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeDuration: false\n    }\n  }\n\n  // lifeCycles\n  //-----------------------------------------------\n  componentWillUnmount() {\n    if (this.dismissTimeoutId) clearTimeout(this.dismissTimeoutId)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.alert) return;\n    const oldId = this.props.alert;\n    const newId = nextProps.alert;\n    if (oldId !== newId) {\n      const { time } = nextProps.alert;\n      this.setState({\n        timeDuration: Boolean(alert)\n      },\n        () => {\n          this.dismissTimeout = setTimeout(() => this.setState({ timeDuration: false }),\n            time || 3000)\n        });\n    }\n  }\n\n  // local methods\n\n  // render\n  render() {\n    const { alert } = this.props;\n    const { timeDuration } = this.state;\n\n    if (!timeDuration || !alert || !alert.content)\n      return null;\n\n    else {\n      return (\n        <Alert style={{\n          position: 'absolute',\n          maxWidth: 260,\n          minWidth: 260,\n          overflow: 'hidden',\n          wordBreak: true,\n          zIndex: 1e5,\n          border: 'none',\n          background: '#f8d7da',\n          color: '#721c24',\n          textAlign: 'center'\n        }} variant={\"danger\"} >\n          {alert.content}\n        </Alert>\n      )\n\n    }\n  }\n}\nexport default ToastAlert;\n","import React from 'react';\nimport { colorRangeNames} from '../utils';\n\nexport default function ColorPicker(props) {\n  const { colourCallback } = props;\n  return (\n    <div className=\"color-picker-container\">\n      <p>Color range:</p>\n      {\n        colorRangeNames.map((each, i) => {\n            return (\n              <div\n                key={each}\n                style={{\n                  backgroundColor: i === 0 ? 'red' :\n                    i === 1 ? 'blue' : i === 2 ? 'green' :\n                      i === 3 ? 'orange' : i === 4 ? 'brown' : 'yellow'\n                }}\n                className=\"color-box\"\n                onClick={() => {                  \n                  typeof colourCallback === 'function' &&\n                    colourCallback(each)\n                }}/>\n            )\n          })\n      }\n    </div>\n  )\n}","import * as React from 'react';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'baseui/modal';\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(props.open || false);\n  const { toggleOpen, title, component, button,\n  noButton } = props;\n\n  return (\n    <React.Fragment>\n      {!noButton && <i\n        style={{\n          margin: 5,\n          cursor: 'pointer',\n          fontSize: '1.5em'\n        }}\n        onClick={() => {\n          typeof toggleOpen === 'function' && toggleOpen();\n          setOpen(true);\n        }}\n        className={button || \"fa fa-table\"}></i>}\n      <Modal size=\"80%\"\n        onClose={() => {\n          typeof (toggleOpen) === 'function' && toggleOpen()\n          setOpen(false);\n        }} isOpen={open}>\n        <ModalHeader>{title}</ModalHeader>\n        <ModalBody>\n          {component}\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            kind={KIND.secondary} size={SIZE.compact}\n            onClick={() => {\n              setOpen(false);\n              typeof (toggleOpen) === 'function' && toggleOpen();\n            }}>Okay</Button>\n        </ModalFooter>\n      </Modal>\n    </React.Fragment>\n  );\n};","import React from 'react';\nimport { Table } from 'baseui/table';\nimport { Pagination } from 'baseui/pagination';\n\nimport { humanize } from '../utils';\n\nexport default function DataTable(props) {\n  const [currentPage, setCurrentPage] = React.useState(1);\n\n  const { data } = props;\n  if (!data || data.length === 0) return null\n  const numPages = Math.floor(data.length / 10)\n\n  const columns = Object.keys(data[0].properties)\n    .map(each => humanize(each))\n\n  const rows = data.slice(currentPage * 10, (currentPage * 10) + 10)\n    .map(feature => Object.keys(feature.properties).map(e =>\n      feature.properties[e]))\n\n  return (\n    <>\n      <Pagination\n        numPages={numPages}\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          setCurrentPage(Math.min(Math.max(nextPage, 1), numPages));\n        }}\n      />\n      <Table columns={columns} data={rows} />\n      {/* // not nice 1000px */}\n      <Pagination\n        numPages={numPages}\n        currentPage={currentPage}\n        onPageChange={({ nextPage }) => {\n          setCurrentPage(Math.min(Math.max(nextPage, 1), numPages));\n        }}\n      />\n    </>\n  )\n}","import React from 'react';\n\nimport { Slider } from 'baseui/slider';\nimport { Checkbox } from 'baseui/checkbox';\nimport { Button } from 'baseui/button';\nimport { StatefulButtonGroup } from 'baseui/button-group';\nimport { StatefulSelect, TYPE } from 'baseui/select';\n\nimport {\n  suggestUIforNumber, humanize\n} from '../utils';\n\nexport default class UI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checks: [],\n    }\n  }\n\n  render() {\n    const {\n      title, sublist, suggested, onChange, steps\n    } = this.props;\n    if (!title || !sublist || sublist.length === 0) return null;\n    const new_checks = this.state.checks;\n    const ui_name = suggested || suggestUIforNumber(sublist.length)\n    let ui_returned = null;\n    if (ui_name === \"checkbox\") {\n      ui_returned = <>\n        {\n          sublist.map((each, i) =>\n            // deal with each checked!\n            <Checkbox\n              key={each}\n              checked={this.state.checks[i]}\n              value={each}\n              onChange={() => {\n                new_checks[i] = !new_checks[i]\n                this.setState({\n                  checks: new_checks\n                })\n              }}>\n              {each}\n            </Checkbox>\n          )\n        }\n      </>\n    } else if (ui_name === \"slider\" && parseInt(sublist[0])) {\n      const s = sublist;\n      ui_returned =\n        <>\n          <Slider\n            value={this.state.value || [s[0]]}\n            min={parseInt(s[0])}\n            max={parseInt(s[s.length - 1])}\n            step={steps || 1} //something\n            onChange={({ value }) => {\n              this.setState({ value });\n              typeof (onChange) === 'function' && onChange(value[0])\n            }}\n          />\n          {title}\n        </>\n    } else if (ui_name === \"buttongroups\") {\n      ui_returned = <>\n        Checkbox Mode StatefulButtonGroup\n        <StatefulButtonGroup mode=\"checkbox\"\n          initialState={{ selected: [0] }}\n        >\n          {\n            sublist.map((each, i) =>\n              <Button\n                key={each + \"-\" + i}\n                value={each}\n                onClick={(e) => console.log(e.target.value)}>\n                {each}\n              </Button>\n            )\n          }\n        </StatefulButtonGroup>\n      </>\n    } else {\n      ui_returned = <StatefulSelect\n        options={sublist.map(each => ({ id: each }))}\n        labelKey=\"id\"\n        placeholder={\"Choose \" + humanize(title)}\n        type={TYPE.search}\n        onChange={event => \n          console.log(event && event.value[0] && event.value[0].id)\n        }\n      />\n    }\n    return ui_returned\n  }\n}","import React, { useState } from 'react';\nimport {\n  makeWidthFlexible,\n  XYPlot, XAxis, YAxis, MarkSeries,\n  Hint\n} from 'react-vis';\nimport { format } from 'd3-format';\n\nimport { shortenName } from '../../utils';\nimport { isArray } from '../../JSUtils';\n\nconst W = 250;\nconst FlexibleXYPlot = makeWidthFlexible(XYPlot);\n\nexport default function SeriesPlot(options) {\n  const [hint, setHint] = useState();\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  const [x1, setX1] = useState(null);\n  const [y1, setY1] = useState(null);\n  const [rect, setRect] = useState(null);\n  const [selected, setSelected] = useState([]);\n\n  const ReactSeries = options.type;\n  if (!ReactSeries) return null;\n  const limit = 10;\n\n  const data = options.type !== MarkSeries && !options.noLimit &&\n  isArray(options.data) && options.data.length > limit ? options.data.slice(0, limit)\n    : options.data;\n  const dataWithColor = data && data.map((d, i) => ({\n    ...d,\n    // if selected return 0 which is:\n    // ['rgb(239, 93, 40)', 'rgb(18, 147, 154)']\n    color: data.length === selected.length ? 0 : Number(!selected.includes(i))\n  }));\n\n  const { plotStyle, title, noXAxis, noYAxis,\n    onValueClick, onDragSelected } = options;\n  return data && data.length > 1 ?\n    // https://github.com/uber/react-vis/issues/584#issuecomment-401693372\n    <div className=\"unselectable\"\n      style={{ position: 'relative' }}\n      onMouseDown={(e) => {\n        if (!x && !y) {\n          setX(e.clientX); setY(e.clientY)\n        }\n      }}\n      onMouseMove={(e) => {\n        if (x && y) {\n          const newX = e.clientX; const newY = e.clientY;\n          setX1(newX); setY1(newY);\n          setRect(\n            <div style={{\n              position: 'fixed',\n              left: x > newX ? newX : x, top: y > y1 ? newY : y,\n              width: Math.abs(newX - x), height: Math.abs(newY - y),\n              backgroundColor: 'gray', opacity: 0.2\n            }} />\n          )\n        }\n      }}\n      onMouseUp={(e) => {\n        setX(null); setY(null); setX1(null); setY1(null);\n        setRect(null);\n        if(rect) {\n          onDragSelected(selected.map(e => \n            dataWithColor[e] && dataWithColor[e].x))\n        }\n        setSelected([])\n      }}\n      onMouseOut={() => {\n        if(!rect) {\n          setSelected([])\n        }\n      }}\n    >\n      {options.type !== MarkSeries && !options.noLimit &&\n        options.data && options.data.length > limit &&\n        <h4>Plotting first {limit} values:</h4>}\n      {noYAxis && title &&\n        <h4>{title}</h4>\n      }\n      <FlexibleXYPlot xType=\"ordinal\"\n        margin={{ bottom: (plotStyle && plotStyle.marginBottom) || 40 }} // default is 40\n        animation={{ duration: 1 }}\n        height={(plotStyle && plotStyle.height) || W}\n        width={(plotStyle && plotStyle.width) || W}\n        onMouseLeave={() => { setHint(false) }}\n      >\n        {!noXAxis && // if provided dont\n          <XAxis\n            tickSize={0}\n            tickFormat={v => shortenName(v, 10)}\n            tickValues={\n              (data.length > limit)\n                ? data\n                  .filter((item, idx) => {\n                    if ((idx % Math.floor(data.length / limit)) === 0) {\n                      return item.x\n                    }\n                  }).map(item => (item.x))\n                : data.map(item => (item.x))\n            }\n            position=\"right\" tickLabelAngle={-65} style={{\n              line: { strokeWidth: 0 },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} />}\n        {!noYAxis && // if provided dont\n          <YAxis\n            tickSize={0}\n            tickLabelAngle={-45} tickFormat={v => format(\".2s\")(v)} style={{\n              line: { strokeWidth: 0 },\n              title: { fill: options.dark ? '#fff' : '#000' },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} position=\"start\" title={title} />\n        }\n        <ReactSeries\n          onValueClick={onValueClick}\n          // see abstract-series.js\n          /*\n          onNearestX(value, {\n            innerX: xScaleFn(value),\n            index: valueIndex,\n            event: event.nativeEvent\n          });\n          */\n          onNearestX={(datapoint, { index, innerX }) => {\n            setHint({ x: datapoint.x, y: datapoint.y });\n            if (rect && isWithinRect({ x, x1, value: innerX })) {\n              if (!selected.includes(index)) { // prevent rerender\n                setSelected([...selected, index]);\n              }\n              // TODO see how one can detect \"leaving\"\n              // outside the box but rect is dragging\n              // console.log(\"DEselect \", index);\n              // setSelected(selected.filter(e => e !== index));\n            } else {\n              if (!rect) {              \n                setSelected([index]); // single hover\n              }\n            }\n          }}\n          colorDomain={[0, 1]}\n          colorRange={['rgb(239, 93, 40)', 'rgb(18, 147, 154)']}\n          // style={{ fill: type === LineSeries ? 'none' : 'rgb(18, 147, 154)' }}\n          data={dataWithColor} />\n        {hint && <Hint value={hint} />}\n      </FlexibleXYPlot>\n      {x && x1 && rect}\n    </div> : null;\n}\n\nfunction isWithinRect(options) {\n  const { x, x1, value } = options;\n  if (x1 > x) {\n    if (value > x && value < x1) {\n      return true\n    }\n    return false\n  } else {\n    if (value < x && value < x1) {\n      return true\n    }\n    return false\n  }\n}","import React, { useState } from 'react';\n\nimport { makeWidthFlexible, Treemap } from 'react-vis';\nconst FlexibleTreemap = makeWidthFlexible(Treemap); \n\nconst H = 250;\n/**\n * props.data needs to be in this formard\n * {\n *    title: 'sometitle',\n *    color: 1,\n *    children: [1,2,3,4].map(e => ({\n *      name: e,\n *      size: Math.random() * 500,\n *      color: Math.random(),\n *      style: {\n *        border: 'thin solid red'\n *      }\n *     }\n *   ))\n * }\n * \n * @param {Object} props react props\n */\nexport default function TreeMap(props) {\n  const [hoveredNode, setHoveredNode] = useState(false)\n  const { data, plotStyle, title } = props;\n  \n  const treeProps = {\n    animation: {\n      damping: 9,\n      stiffness: 300\n    },\n    data,\n    onLeafMouseOver: x => setHoveredNode({ hoveredNode: x }),\n    onLeafMouseOut: () => setHoveredNode({ hoveredNode: false }),\n    // onLeafClick: () => this.setState({ treemapData: _getRandomData() }),\n    mode: 'squarify',\n    getLabel: x => x.name,\n    // see \n    // https://github.com/uber/react-vis/issues/262#issuecomment-281757385\n    width: plotStyle && plotStyle.width || H + 50,\n    height: plotStyle && plotStyle.height || H\n  };\n\n  if(!data || data.length === 0) return null;\n  return (\n    <div className=\"dynamic-treemap-example\">\n      <h6>{title}</h6>\n      {<FlexibleTreemap {...treeProps} />}\n        {hoveredNode && hoveredNode.value}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport { Accordion, Panel } from 'baseui/accordion';\nimport { VerticalBarSeries, HorizontalBarSeries, LineSeries } from 'react-vis';\n\nimport MultiSelect from './MultiSelect';\nimport TreeMap from './TreeMap';\nimport { humanize } from '../utils';\nimport { isString, isNumber } from '../JSUtils';\nimport { xyObjectByProperty } from '../utils';\nimport SeriesPlot from './Showcases/SeriesPlot';\n\nconst VIS = ['Vertical Bar', 'Horizontal Bar',\n  'Line', 'Pop. Pyramid', 'Treemap'];\n\n/**\n * Generate approprate series/marks for a React-vis\n * type from data and column name.\n * \n * @param {Object} data \n * @param {String} column \n * @param {String} vis \n * @param {Object} plotStyle\n * @param {Boolean} dark\n */\nfunction generateVIS(data, column, vis, plotStyle, dark) {\n  if (!data || data.length === 0 || !isString(column) || !isString(vis)) {\n    return;\n  }\n  let counts = xyObjectByProperty(data, column)\n\n  if (vis === 'Treemap') {\n    return (\n      <TreeMap\n        plotStyle={plotStyle}\n        data={{\n          title: column + \" \" + vis,\n          color: 1,\n          children: counts.map((e, i) => ({\n            name: e.x,\n            size: +(e.y) / data.length,\n            color: isNumber(e.x) || i,\n            style: {\n              border: 'thin solid red'\n            }\n          }))\n        }}\n        title={humanize(column)}\n      />\n    )\n  }\n  if (vis.startsWith('Vertical') ||\n    vis.startsWith(\"Horizontal\") ||\n    vis.startsWith(\"Line\")) {\n    return (\n      <SeriesPlot\n        dark={dark}\n        plotStyle={plotStyle}\n        data={counts}\n        type={\n          vis.startsWith(\"Vertical\") ?\n            VerticalBarSeries :\n            vis.startsWith(\"Horizontal\") ?\n              HorizontalBarSeries :\n              LineSeries\n        }\n        title={humanize(column)} noYAxis={true}\n      />\n    )\n  }\n}\nexport default function AddVIS(props) {\n  const [column, setColumn] = useState(false)\n  const [vis, setVis] = useState(false)\n  const [list, setList] = useState([]);\n  // useEffect(() => {\n  // if props.data changes only then it should react to it\n  // setVis(false);\n  // setColumn([])\n  // }, [props.data])\n\n  const { data, onSelectCallback, dark,\n    noAccordion, plotStyle } = props;\n\n  if (!data || data.length === 0) return null;\n\n  const columns = Object.keys(data[0].properties);\n\n  return (\n    <div>\n      <h6>Generate graphs from columns</h6>\n      <div className=\"searchField\">\n        <MultiSelect\n          single={true}\n          title=\"Choose column\"\n          values={columns.map(e => ({ id: humanize(e), value: e }))}\n          onSelectCallback={(selected) => {\n            setColumn(selected);\n            typeof onSelectCallback === 'function' &&\n              onSelectCallback(selected)\n          }}\n          // sync state\n          value={column}\n        />\n        {column.length > 0 &&\n          <MultiSelect\n            single={true}\n            title=\"Choose vis\"\n            values={VIS.map(e => ({ id: e, value: e }))}\n            onSelectCallback={(selected) => {\n              setVis(selected)\n            }}\n            // sync state\n            value={vis}\n          />}\n      </div>\n      <Button\n        kind={KIND.secondary} size={SIZE.compact}\n        onClick={() => {\n          if (column.length === 0 || vis.length === 0 || !column[0]) return;\n          setList([\n            ...list,\n            generateVIS(data, column[0].value, vis[0].value, plotStyle, dark)\n          ])\n          // console.log(column[0].value, vis[0].value);\n        }}>Add</Button>\n      <div className=\"visArea\">\n        {!noAccordion ?\n          <Accordion\n            expanded={true}\n            onChange={({ expanded }) => console.log(expanded)}\n          >\n            {\n              list.map((plot, i) =>\n                <Panel key={'panel-' + i}>\n                  <Button\n                    kind={KIND.secondary} size={SIZE.compact}\n                    onClick={() => {\n                      setList(\n                        list.filter((e, j) => i !== j)\n                      )\n                    }}>X</Button>\n                  {plot}\n                </Panel>\n              )\n            }\n          </Accordion> :\n          <center>\n            {list.map((plot, i) =>\n              plot && <div style={{ border: '1px solid' }}>\n                <Button\n                  kind={KIND.secondary} size={SIZE.compact}\n                  onClick={() => {\n                    setList(\n                      list.filter((e, j) => i !== j)\n                    )\n                  }}>X</Button>\n                {plot}\n              </div>)\n            }\n          </center>\n        }\n      </div>\n    </div >\n  )\n}","import React from 'react';\nimport {\n  Tabs, Tab, FormGroup, InputGroup,\n  FormControl, Glyphicon, Checkbox\n} from 'react-bootstrap';\nimport { Button, KIND, SIZE } from 'baseui/button';\nimport { StyledLink } from \"baseui/link\";\n\nimport './DeckSidebar.css';\nimport MapboxBaseLayers from '../MapboxBaseLayers';\nimport {\n  xyObjectByProperty, percentDiv,\n  searchNominatom,\n  humanize, generateLegend, sortNumericArray\n} from '../../utils';\nimport { LineSeries, VerticalBarSeries } from 'react-vis';\nimport Variables from '../Variables';\nimport RBAlert from '../RBAlert';\nimport { propertyCount } from '../../geojsonutils';\nimport { DEV_URL, PRD_URL, LAYERSTYLES, RADIUS, ELEVATION }\n  from '../../Constants';\nimport ColorPicker from '../ColourPicker';\nimport Modal from '../Modal';\nimport DataTable from '../Table';\n\nimport { yearSlider } from '../Showcases/Widgets';\nimport SeriesPlot from '../Showcases/SeriesPlot';\nimport { isNumber } from '../../JSUtils';\nimport MultiSelect from '../MultiSelect';\nimport AddVIS from '../AddVIS';\n\nconst URL = (process.env.NODE_ENV === 'development' ? DEV_URL : PRD_URL);\n\nexport default class DeckSidebar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      radius: RADIUS,\n      elevation: ELEVATION,\n      year: \"\",\n      reset: false,\n      multiVarSelect: {},\n      barChartVariable: \"road_type\",\n      datasetName: props.datasetName,\n      subsetBoundsChange: true\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { data, alert, loading } = this.props;\n    const { elevation, radius, reset, subsetBoundsChange,\n      barChartVariable,  } = this.state;\n    // avoid rerender as directly operating on document.get* \n    // does not look neat. Keeping it React way.\n    if (reset !== nextState.reset ||\n      elevation !== nextState.elevation ||\n      radius !== nextState.radius ||\n      subsetBoundsChange !== nextState.subsetBoundsChange ||\n      alert !== nextProps.alert ||\n      loading !== nextProps.loading ||\n      barChartVariable !== nextState.barChartVariable) return true;\n    //TODO:  a more functional way is needed        \n    if (data && nextProps && nextProps.data &&\n      data.length === nextProps.data.length) {\n      return false\n    }\n    return true;\n  }\n\n  /**\n   * Render the sidebar empty if no data is loaded.\n   * Partly because we like to load from a URL.\n   */\n  render() {\n    const { elevation, radius, year, datasetName,\n      subsetBoundsChange, multiVarSelect, barChartVariable } = this.state;\n    const { onChangeRadius, onChangeElevation,\n      onSelectCallback, data, colourCallback, unfilteredData,\n      toggleSubsetBoundsChange, urlCallback, alert,\n      onlocationChange, column, dark, toggleOpen } = this.props;\n    // let plot_data = [];\n    // let plot_data_multi = [[], []];\n    const notEmpty = data && data.length > 1;\n    // plot_data = crashes_plot_data(notEmpty, data, plot_data, plot_data_multi);\n    let columnDomain = [];\n    let columnData = notEmpty ?\n      xyObjectByProperty(data, column || barChartVariable) : [];\n    const geomType = notEmpty && data[0].geometry.type.toLowerCase();\n    // console.log(geomType);\n    if (notEmpty && column && (geomType === 'polygon' ||\n      geomType === 'multipolygon' || \"linestring\") &&\n      isNumber(data[0].properties[column])) {\n      // we dont need to use generateDomain(data, column)\n      // columnData already has this in its x'es\n      columnDomain = columnData.map(e => e.x);\n      // we will just sort it        \n      columnDomain = sortNumericArray(columnDomain);\n      // console.log(columnDomain);\n\n      this.props.showLegend(\n        generateLegend(\n          {\n            domain: columnDomain,\n            title: humanize(column)\n          }\n        )\n      );\n    }\n\n    const columnPlot = {\n      data: columnData,\n      opacity: 1,\n      stroke: 'rgb(72, 87, 104)',\n      fill: 'rgb(18, 147, 154)',\n    }\n\n    const resetState = (urlOrName) => {\n      this.setState({\n        reset: true,\n        year: \"\",\n        multiVarSelect: {},\n        barChartVariable: \"road_type\",\n        datasetName: urlOrName || datasetName\n      })\n    }\n\n    // reuse for different props\n    const generatePercent = (array, prop, n) => {\n      return array &&\n        <div style={{ clear: 'both' }}>{\n          array.map(each =>\n            percentDiv(each.x, 100 * each.y / data.length, () => {\n              if (multiVarSelect && multiVarSelect[prop] &&\n                multiVarSelect[prop].has(each.x)) {\n                delete multiVarSelect[prop];\n              } else {\n                multiVarSelect[prop] = new Set([each.x]);\n                this.setState({ multiVarSelect })\n              }\n              onSelectCallback &&\n                onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                  { what: '' } : { what: 'multi', selected: multiVarSelect })\n            }, dark, n))\n        }</div>\n    }\n\n    const plotWith = (t, p) => <SeriesPlot\n      dark={dark}\n      title={t} noYAxis={true}\n      plotStyle={{ height: 100 }} noLimit={true}\n      type={LineSeries}\n      // sorts the results if x is a number\n      // TODO: do we want to do this?\n      // also think about sorting according to y\n      data={xyObjectByProperty(data, p)}\n    />\n\n    return (\n      <>\n        <div\n          style={{\n            color: dark ? \"white\" : \"black\",\n            background: dark ? \"#242730\" : \"white\"\n          }}\n          className=\"side-panel\">\n          <RBAlert alert={alert} />\n          <div\n            style={{\n              background: dark ? '#29323C' : '#eee'\n            }}\n            className=\"side-pane-header\">\n            <h2>{data && data.length ?\n              data.length + \" row\" + (data.length > 1 ? \"s\" : \"\") + \".\"\n              : this.props.loading ? \"Loading...\" : \"Nothing to show\"}\n            </h2>\n          </div>\n          <div>\n            {/* <DataInput\n              toggleOpen={() => typeof toggleOpen === 'function' && toggleOpen()}\n              urlCallback={(url, geojson, name) => {\n                resetState(url || name);\n                typeof (urlCallback) === 'function'\n                  && urlCallback(url, geojson);\n                typeof (toggleOpen) === 'function' && toggleOpen()\n              }\n              } /> */}\n            <Modal\n              toggleOpen={() => typeof toggleOpen === 'function' && toggleOpen()}\n              component={<DataTable data={data} />} />\n            {\n              this.state.reset &&\n              <Button\n                kind={KIND.secondary} size={SIZE.compact}\n                onClick={() => {\n                  resetState();\n                  typeof (urlCallback) === 'function'\n                    && urlCallback(URL + \"/api/stats19\");\n                  typeof (this.props.showLegend) === 'function' &&\n                    this.props.showLegend(false);\n                }}>Reset</Button>\n            }\n            {notEmpty &&\n              <StyledLink \n              download=\"sa-crashes.geojson\"  \n              href={\n                \"data:text/json;charset=utf-8,\" + \n                encodeURIComponent(JSON.stringify({\n                  type: 'FeatureCollection',\n                  features: data\n                }))\n              }>\n                {<i\n                style={{\n                  margin: 5,\n                  cursor: 'pointer',\n                  fontSize: '1.5em'\n                }}\n                className={\"fa fa-download\"}></i>}\n                </StyledLink>\n            }\n          </div>\n          <div className=\"side-panel-body\">\n            <div className=\"side-panel-body-content\">\n              {/* <DateSlider data={yy} multiVarSelect={multiVarSelect}\n                  onSelectCallback={(changes) => console.log(changes)} \n                  callback={(changes) => console.log(changes)}/> */}\n              {/* range of two values slider is not native html */\n                yearSlider({\n                  data: unfilteredData, year, multiVarSelect,\n                  // for callback we get { year: \"\",multiVarSelect }\n                  onSelectCallback, callback: (changes) => this.setState(changes)\n                })\n              }\n              <br />\n              {/* TODO: generate this declaritively too */}\n              {\n                [\"accident_severity\", \"casualty_type\"]\n                  .map(e => generatePercent(\n                    propertyCount(data, e), e, e === \"casualty_type\" ? 2 : 3\n                  )\n                  )\n              }\n              <hr style={{ clear: 'both' }} />\n              <Checkbox\n                checked={subsetBoundsChange}\n                onChange={() => {\n                  // needed for subsequent parent call\n                  this.setState({ subsetBoundsChange: !subsetBoundsChange })\n                  if (toggleSubsetBoundsChange && typeof (toggleSubsetBoundsChange) === 'function') {\n                    toggleSubsetBoundsChange(!subsetBoundsChange) //starts with false\n                  }\n                }}\n              >Subset by map boundary</Checkbox>\n              <Tabs defaultActiveKey={\"1\"} id=\"main-tabs\">\n                <Tab eventKey=\"1\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-info\" />\n                }>\n                  {/* distribution example */}\n                  {\n                    ['date', 'age_of_casualty'].map(e => notEmpty &&\n                      data[0].properties.hasOwnProperty([e]) &&\n                      plotWith(humanize(e), e))\n                  }\n                  {notEmpty &&\n                    data[0].properties.hasOwnProperty(['day_of_week']) &&\n                    <SeriesPlot\n                      dark={dark}\n                      data={xyObjectByProperty(data, 'day_of_week')}\n                      type={VerticalBarSeries}\n                      plotStyle={{ marginBottom: 100 }}\n                    />}\n                  {/* TODO: example of generating vis based on column\n                  cloudl now be deleted. */}\n                  {<SeriesPlot\n                    dark={dark}\n                    data={columnPlot.data}\n                    type={VerticalBarSeries}\n                    onValueClick={(datapoint) => {\n                      // convert back to string\n                      multiVarSelect[column ||\n                        barChartVariable] = new Set([datapoint.x + \"\"]);\n                      this.setState({ multiVarSelect })\n                      onSelectCallback &&\n                        onSelectCallback({ what: 'multi', selected: multiVarSelect })\n                    }}\n                    onDragSelected={(datapoints) => {\n                      multiVarSelect[column ||\n                        barChartVariable] = new Set(datapoints.map(e => e + \"\"));\n                      this.setState({ multiVarSelect })\n                      onSelectCallback &&\n                        onSelectCallback({ what: 'multi', selected: multiVarSelect })\n                    }}\n                    plotStyle={{ marginBottom: 100 }} noYAxis={true}\n\n                  />}\n                  {/* pick a column and vis type */}\n                  <AddVIS data={data} dark={dark} />\n                  {/* {popPyramid({ data, dark: dark })} */}\n                </Tab>\n                <Tab eventKey=\"2\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-sliders\" />\n                }>\n                  {notEmpty &&\n                    <div>\n                      <ColorPicker colourCallback={(color) =>\n                        typeof colourCallback === 'function' &&\n                        colourCallback(color)} />\n                      <input\n                        type=\"range\"\n                        id=\"radius\"\n                        min={50}\n                        max={1000}\n                        step={50}\n                        value={radius}\n                        onChange={(e) => {\n                          this.setState({\n                            radius: e.target.value,\n                          })\n                          typeof (onChangeRadius) === 'function' &&\n                            onChangeRadius(e.target.value)\n                        }}\n                      />\n                      <h5>Radius: {radius}.</h5>\n                      <input\n                        type=\"range\"\n                        id=\"elevation\"\n                        min={2}\n                        max={8}\n                        step={2}\n                        value={elevation}\n                        onChange={(e) => {\n                          this.setState({\n                            elevation: e.target.value\n                          })\n                          typeof (onChangeElevation) === 'function' &&\n                            onChangeElevation(e.target.value)\n                        }}\n                      />\n                      <h5>Elevation: {elevation}.</h5>\n                    </div>\n                  }\n                  {notEmpty &&\n                    <>\n                      <h6>Deck Layer:</h6>\n                      <MultiSelect\n                        title=\"Vis style\"\n                        single={true}\n                        values={\n                          LAYERSTYLES.map(e =>\n                            ({ id: humanize(e), value: e }))\n                        }\n                        onSelectCallback={(selected) => {\n                          // array of seingle {id: , value: } object\n                          const layerStyle = (selected && selected[0]) ?\n                            selected[0].value : layerStyle;\n                          this.setState({\n                            layerStyle: layerStyle\n                          });\n                          typeof onSelectCallback === 'function' &&\n                            onSelectCallback({\n                              what: 'layerStyle', selected: layerStyle\n                            });\n                        }}\n                      />\n                    </>\n                  }\n                  Map Styles\n                  <br />\n                  <MapboxBaseLayers\n                    onSelectCallback={(selected) =>\n                      onSelectCallback &&\n                      onSelectCallback({\n                        selected: selected,\n                        what: 'mapstyle'\n                      })\n                    }\n                  />\n                </Tab>\n                {/* <Tab eventKey=\"3\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-tasks\" />\n                }>\n                  Tab 3\n                </Tab> */}\n                <Tab eventKey=\"3\" title={\n                  <i style={{ fontSize: '2rem' }}\n                    className=\"fa fa-filter\" > {\n                      multiVarSelect && Object.keys(multiVarSelect).length\n                    } </i>\n                }>\n                  {\n                    unfilteredData && unfilteredData.length > 0 &&\n                    <Variables\n                      dark={dark}\n                      multiVarSelect={multiVarSelect}\n                      onSelectCallback={(mvs) => {\n                        typeof (onSelectCallback) === 'function' &&\n                          onSelectCallback(\n                            Object.keys(mvs).length === 0 ?\n                              { what: '' } : { what: 'multi', selected: mvs })\n                        this.setState({ multiVarSelect: mvs })\n                      }}\n                      unfilteredData={unfilteredData} />\n                  }\n                </Tab>\n              </Tabs>\n            </div>\n            <div className=\"space\"></div>\n            <form className=\"search-form\" onSubmit={(e) => {\n              e.preventDefault();\n              console.log(this.state.search);\n              searchNominatom(this.state.search, (json) => {\n                console.log(json && json.length > 0 && json[0].boundingbox);\n                let bbox = json && json.length > 0 && json[0].boundingbox;\n                bbox = bbox && bbox.map(num => +(num))\n                typeof onlocationChange === 'function' && bbox &&\n                  onlocationChange({\n                    bbox: bbox,\n                    lon: +(json[0].lon), lat: +(json[0].lat)\n                  })\n              })\n            }}>\n              <FormGroup>\n                <InputGroup>\n                  <FormControl\n                    style={{\n                      background: dark ? '#242730' : 'white',\n                      color: dark ? 'white' : 'black'\n                    }}\n                    onChange={(e) => this.setState({ search: e.target.value })}\n                    placeholder=\"fly to...\" type=\"text\" />\n                  <InputGroup.Addon\n                    style={{\n                      background: dark ? '#242730' : 'white',\n                      color: dark ? 'white' : 'black'\n                    }}>\n                    <Glyphicon glyph=\"search\" />\n                  </InputGroup.Addon>\n                </InputGroup>\n              </FormGroup>\n            </form>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\n","import React, { useState } from 'react';\nimport { Slider } from 'baseui/slider';\n\nimport GenerateUI from '../UI';\nimport { DateTime } from \"luxon\";\nimport { getPropertyValues } from '../../geojsonutils';\n\nconst DateSlider = (props) => {\n  const { data, multiVarSelect, onSelectCallback,\n    callback } = props;\n  const [value, setValue] = useState()\n\n  if (!data || data.length === 0) return null;\n  const s = Array.from(Array(data.length).keys()).slice(1, data.length - 1)\n\n  return (\n    <>\n      <Slider\n        value={value || [s[0]]}\n        min={parseInt(s[0])}\n        max={parseInt(s[s.length - 1])}\n        step={1}\n        onChange={({ value }) => {\n          setValue(value);\n          // keep it the same in delete\n          multiVarSelect['date'] = new Set([data[value - 1] + \"\"]);\n          typeof (callback) === 'function' &&\n            callback({\n              date: data[value - 1] + \"\",\n              multiVarSelect\n            });\n          console.log(data[value - 1], data);\n          typeof (onSelectCallback) === 'function' &&\n            onSelectCallback({ selected: multiVarSelect, what: 'multi' });\n        }}\n      />\n      {<h5>Dates(s): {value ? data[value - 1] : data[0] + \"-\" + data[data.length - 1]}.\n        {value &&\n          <i style={{ fontSize: '2rem' }} className=\"fa fa-trash\"\n            onClick={() => {\n              // remove\n              setValue(null);\n              delete multiVarSelect.date\n              typeof (onSelectCallback) === 'function' &&\n                onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                  { what: '' } : { what: 'multi', selected: multiVarSelect });\n              typeof (callback) === 'function' &&\n                callback({\n                  date: \"\",\n                  multiVarSelect\n                });\n            }} />}\n      </h5>}\n    </>)\n}\n\nconst yearSlider = (options) => {\n  const { data, year, multiVarSelect, onSelectCallback,\n    callback } = options;\n\n  if (!(data && data.length > 1 &&\n    (data[0].properties.date || data[0].properties['YEAR']) &&\n    (DateTime.fromFormat(data[0].properties.date + '', 'yyyy-mm-dd').isValid ||\n      DateTime.fromFormat(data[0].properties['YEAR'] + '', 'yyyy').isValid))) {\n    return null\n  }\n  const years = getPropertyValues({ features: data }, \"date\")\n    // returned 2009-01-02, convert to 2009\n    .map(e => +(e.split(\"-\")[0])).sort()\n  return <GenerateUI\n    title={\n      // TODO: change min max labels dynamically\n      // so should all the values generated\n      <h5>Year(s): {year ? year :\n        (years[0] + \" - \" + years[years.length - 1])}\n        {year &&\n          <i style={{ fontSize: '2rem' }} className=\"fa fa-trash\"\n            onClick={() => {\n              multiVarSelect.date ?\n                delete multiVarSelect.date : delete multiVarSelect.YEAR;\n              typeof (onSelectCallback) === 'function' &&\n                onSelectCallback(Object.keys(multiVarSelect).length === 0 ?\n                  { what: '' } : { what: 'multi', selected: multiVarSelect });\n              callback({\n                year: \"\",\n                multiVarSelect\n              });\n            }} />}\n      </h5>}\n    sublist={[...new Set(years)]}\n    suggested=\"slider\"\n    onChange={(value) => {\n      // the kye is one of `date` or `YEAR`\n      // keep it the same in delete\n      multiVarSelect[data[0].properties.date ?\n        'date' : 'YEAR'] = new Set([value + \"\"]);\n      callback({\n        year: value + \"\",\n        multiVarSelect\n      });\n      typeof (onSelectCallback) === 'function' &&\n        onSelectCallback({ selected: multiVarSelect, what: 'multi' });\n    }} />;\n}\n\nexport {\n  yearSlider,\n  DateSlider,\n}","import React, { Component } from 'react';\nimport { Slider } from 'baseui/slider';\nimport { XYPlot, XAxis, YAxis, HexbinSeries, Hint } from 'react-vis';\n\nexport default class HexHeatmap extends Component {\n  state = {\n    hoveredNode: null,\n    radius: 10,\n    offset: 0,\n  };\n  render() {\n    const { data, options } = this.props;\n    const { radius, hoveredNode } = this.state;\n    if(!data || !data.length) return null\n    return (\n      <div className=\"centered-and-flexed\" style={{color:'#fff'}}>\n        <Slider\n            value={[this.state.radius]}\n            min={5}\n            max={50}\n            step={5}\n            onChange={({ value }) => {\n              this.setState({ radius: value[0] });\n              // typeof (onChange) === 'function' && onChange(value[0])\n            }}\n          />\n          {\"Radius (pixels)\"}\n        <XYPlot\n          margin={{ left: 10, bottom: 10 }}\n          height={options &&\n            options.plotStyle && options.plotStyle.height || 350}\n          width={options &&\n            options.plotStyle && options.plotStyle.width || 350}\n          onMouseLeave={() => this.setState({ hoveredNode: null })}\n        >\n          <HexbinSeries\n            animation\n            className=\"hexbin-example\"\n            style={{\n              stroke: '#125C77',\n              strokeLinejoin: 'round'\n            }}\n            // onValueMouseOver={d => this.setState({ hoveredNode: d })}\n            colorRange={['orange', 'cyan']}\n            radius={radius}\n            data={data}\n          />\n          {options && !options.noXAxis && \n          <XAxis tickLabelAngle={-45} style={{\n            text: { fill: '#fff', fontWeight: 400 }\n          }} />}\n          {options && !options.noYAxis && \n          <YAxis tickLabelAngle={-45} style={{\n            text: { fill: '#fff', fontWeight: 400 }\n          }} />}\n          {/* {hoveredNode && (\n            <Hint\n              style={{ background: '#fff', position: 'relative' }}\n              xType=\"literal\"\n              yType=\"literal\"\n              getX={d => 50}\n              getY={d => 50}\n              value={{\n                x: hoveredNode.x,\n                y: hoveredNode.y,\n                value: hoveredNode.length\n              }}\n            />\n          )} */}\n        </XYPlot>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport HexbinSeries from '../Showcases/HexbinSeries';\n\nimport { coordsAsXY } from '../../geojsonutils';\n\nexport default (props) => {\n  // const [value, setValue] = useState([]);\n  const [open, setOpen] = useState(props.isMobile === false);\n  useEffect(() => {\n    // if props.open change to false is\n    // the only time it should react to it\n    if (props.open === true) return;\n    setOpen(props.open);\n  }, [props.open])\n\n  const { data } = props;\n  const notEmpty = data && data.length > 1;\n\n  if (notEmpty && data[0].geometry.type.toUpperCase() === 'POINT') {\n    return (\n      <div\n        style={{\n          marginRight: !open ? -350 : 0\n        }}\n        className=\"right-panel-container\">\n        <div\n          className=\"close-button\"\n          onClick={() => setOpen(!open)}\n          style={{ color: 'white' }}>\n          <i\n            style={{\n              //bottom and just outside the div\n              marginLeft: -16,\n              bottom: 0,\n              position: 'absolute',\n              backgroundColor: '#242730',\n              fontSize: '2rem', color: 'white !important'\n            }}\n            className={open ? \"fa fa-arrow-circle-right\" :\n              \"fa fa-arrow-circle-left\"} />\n        </div>\n        <div className=\"right-side-panel\">\n          {notEmpty &&\n            <HexbinSeries\n              data={coordsAsXY({ features: data })}\n              options={{ noXAxis: true, noYAxis: true }} />}\n        </div>\n      </div>\n    );\n  } else {\n    return null\n  }\n\n};","import React, { useState } from \"react\";\n\nimport DeckSidebar from \"./DeckSidebar\";\nimport HexPlot from './HexPlot';\n\n/**\n * The idea of this component is to avoid \n * rerender in the main component, everytime\n * open/close is executed. \n * \n * It could add further states to save main component rerendering \n * if need be.\n * \n */\nexport default (props) => {\n  const [open, setOpen] = useState(!props.isMobile);\n  const [hex, setHex] = useState(false);\n\n  // console.log(hex);\n\n  return (\n    <div className=\"side-panel-container\"\n      style={{ marginLeft: open ? 0 : '-320px' }}>\n      <DeckSidebar {...props}\n        // Note: \n        // *****************************\n        // Hooks is strange see this\n        // https://stackoverflow.com/a/54069332/2332101\n        // *****************************\n        toggleOpen={() => setOpen(o => !o)}   // o is current open\n        toggleHexPlot={() => setHex(h => !h)} // h is current hex\n      />\n      {hex &&\n        <HexPlot open={open} isMobile={props.isMobile}\n          data={props.data} />}\n      <div\n        className=\"close-button\"\n        onClick={() => setOpen(!open)}\n        style={{ color: 'white' }}>\n        <div style={{ backgroundColor: '#242730' }}>\n          <i\n            style={{ fontSize: '2rem', color: 'white !important' }}\n            className={open ? \"fa fa-arrow-circle-left\" :\n              \"fa fa-arrow-circle-right\"} />\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport {\n  XYPlot, XAxis, YAxis, LineSeries,\n  Crosshair, DiscreteColorLegend\n} from 'react-vis';\nimport { format } from 'd3-format';\n\nimport { shortenName } from '../../utils';\n\nconst W = 250;\n\n/**\n * React Hook to generate a multi line plot. Requires: \n * multi line data {data: [[{x:v,y:v},],[]]} object arrays and\n * maximum of 10 lines.\n * \n * Note: options.legend must match order of options.data multi\n * dimensional array.\n * TODO: consider {data: {legend1: array, legend2: array}}\n * \n * @param {Object} options \n */\nexport default function MultiLinePlot(options) {\n  const [hint, setHint] = useState();\n\n  if (!Array.isArray(options.data) ||\n    options.data.length > 10) return null;\n\n  const limit = 10;\n\n  const { plotStyle, title, noXAxis, noYAxis,\n    onValueClick, data, legend } = options;\n\n  return options.data && options.data.length > 1 &&\n    // https://github.com/uber/react-vis/issues/584#issuecomment-401693372\n    <div className=\"unselectable\" style={{ position: 'relative', color: '#fff' }}>\n      {!options.noLimit &&\n        options.data && options.data.length > limit &&\n        <h4>Plotting first {limit} values:</h4>}\n      {noYAxis && title &&\n        <h4>{title}</h4>\n      }\n      <XYPlot xType=\"ordinal\"\n        margin={{ bottom: (plotStyle && plotStyle.marginBottom) || 40 }} // default is 40\n        animation={{ duration: 1 }}\n        height={(plotStyle && plotStyle.height) || W}\n        width={(plotStyle && plotStyle.width) || W}\n        onMouseLeave={() => { setHint(false) }}\n      >\n        {!noXAxis && // if provided dont\n          <XAxis\n            tickSize={0}\n            tickFormat={v => shortenName(v, 10)}\n            position=\"right\" tickLabelAngle={-65} style={{\n              line: { strokeWidth: 0 },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} />}\n        {!noYAxis && // if provided dont\n          <YAxis\n            tickSize={0}\n            tickLabelAngle={-45} tickFormat={v => format(\".2s\")(v)} style={{\n              line: { strokeWidth: 0 },\n              title: { fill: options.dark ? '#fff' : '#000' },\n              text: { fill: options.dark ? '#fff' : '#000' } //, fontWeight: plotStyle && plotStyle.fontWeight || 400 }\n            }} position=\"start\" title={title} />\n        }\n        {data.map((line, i) =>\n          <LineSeries\n            key={\"line-\" + i}\n            onValueClick={onValueClick}\n            onNearestX={(_, { index }) => {\n              setHint(data.map(d => d[index]))\n            }}\n            style={{ fill: 'none' }}\n            data={line} />)}\n        {hint && <Crosshair\n          values={hint}\n          className={'test-class-name'}\n        />}\n      </XYPlot>\n      <DiscreteColorLegend\n        orientation=\"horizontal\" width={W}\n        items={legend} />\n    </div>;\n}","import React from 'react';\nimport { LineSeries } from 'react-vis';\nimport { Table } from 'baseui/table';\nimport { humanize, xyObjectByProperty } from '../utils';\nimport SeriesPlot from './Showcases/SeriesPlot';\nimport { getPropertyValues, propertyCountByProperty } from '../geojsonutils';\nimport MultiLinePlot from './Showcases/MultiLinePlot';\n\nconst WIDTH = 220;\nconst BAR_HEIGHT = 80;\n\nexport default class Tooltip extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isMobile: props.isMobile,\n    };\n    this._listPropsAndValues = this._listPropsAndValues.bind(this);\n  }\n\n  componentWillMount() {\n    window.addEventListener('resize', this._handleWindowSizeChange.bind(this));\n  }\n\n  // make sure to remove the listener\n  // when the component is not mounted anymore\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._handleWindowSizeChange.bind(this));\n  }\n\n  _handleWindowSizeChange = () => {\n    this.forceUpdate()\n  };\n\n  /**\n   * hoverdObject can be of two types so far:\n   * 1. collections of points with `.points` property\n   * 2. properties of `.type === 'Feature'`.\n   */\n  render() {\n    const { topx, topy, hoveredObject } = this.props;\n    const { isMobile } = this.state;\n    // console.log(topx, topy);\n\n    if (!hoveredObject) return null;\n\n    const type_feature = hoveredObject.type &&\n      hoveredObject.type === 'Feature';\n    const cluster = hoveredObject && hoveredObject.cluster\n    // {cluster: true, cluster_id: 8, point_count: 54, \n    // point_count_abbreviated: 54}\n\n    const severity_keys = getPropertyValues({ features: hoveredObject.points },\n      \"accident_severity\");\n    // by year\n    const crashes_data = xyObjectByProperty(hoveredObject.points, \"date\");\n    const severity_data_separate = [];\n    if (!type_feature && !cluster) {\n\n      // separate the severity into [[],[]] arrays\n      const severity_by_year = propertyCountByProperty(hoveredObject.points,\n        \"accident_severity\", severity_keys, \"date\");\n      //{2009: {Slight: 1}, 2010: {Slight: 3}, 2012: {Slight: 4}, \n      // 2013: {Slight: 3}, 2014: {Serious: 1}, 2015: {Slight: 6}, \n      // 2016: {Serious: 1, Slight: 2}, 2017: {Slight: 1}}\n      // now turn it into [[],[]]\n      Object.keys(severity_by_year).map(e => +(e)).sort()\n        .forEach(y => {\n          severity_by_year[y] &&\n            Object.keys(severity_by_year[y]).forEach(kk => {\n              // get index of kk\n              const index = severity_keys.indexOf(kk);\n              if (!severity_data_separate[index]) {\n                severity_data_separate[index] = [];\n              }\n              // 2016: {Serious: 1, Slight: 2}\n              severity_data_separate[index].push({\n                x: +(y), y: severity_by_year[y][kk]\n              })\n            })\n        })\n    }\n    // console.log(hoveredObject);\n    // console.log(crashes_data);\n    // console.log(severity_data_separate);\n\n    const w = window.innerWidth;\n    const y = window.innerHeight;\n    const n_topy = isMobile ? 10 :\n      topy + (WIDTH + BAR_HEIGHT) > y ? topy - WIDTH : topy;\n    const n_left = isMobile ? 10 :\n      topx + WIDTH > w ? topx - WIDTH : topx;\n    const tooltip =\n      <div\n        className=\"xyz\" style={{\n          // top: topy + (WIDTH + BAR_HEIGHT) > y ? n_topy : topy,\n          // left: topx + WIDTH > w ? n_left : topx\n          top: 5, left: isMobile ? 10 : 330,\n          overflow: 'auto'\n        }}>\n        <div>\n          <b>Total: {cluster ? hoveredObject.point_count :\n            type_feature ? 1 : hoveredObject.points.length}</b>\n        </div>\n        <div>\n          {\n            // Simple logic, if points and less two points or less,\n            // or not poingts, hard to expect React-vis generating plot.\n            // so list the values of the non-point or list both points.\n            !cluster && (type_feature || hoveredObject.points.length <= 2) &&\n            this._listPropsAndValues(hoveredObject)\n          }\n          {\n            severity_data_separate.length > 1 ?\n              <MultiLinePlot\n                data={[...severity_data_separate, crashes_data]}\n                legend={[...severity_keys, 'Total']}\n                title=\"Crashes\" noYAxis={true} dark={true}\n                plotStyle={{ height: 100, marginBottom: 50 }}\n              /> :\n              <SeriesPlot\n                dark={true} noYAxis={true}\n                title={severity_keys && severity_keys[0] ? \n                  \"Total (\" + severity_keys[0] + \")\" : \"Total\"}\n                data={crashes_data} type={LineSeries} />\n          }\n        </div>\n      </div >\n    return (tooltip)\n  }\n\n  _listPropsAndValues(hoveredObject, all = false) {\n    let DATA = []\n    const props = hoveredObject.properties;\n    const n = 6;\n    if (props) {\n      const keys = Object.keys(props)\n      DATA = keys\n        .slice(1, all ? keys.length : n)\n        .map(p => {\n          return ([humanize(p), props[p]])\n        })\n    } else { // two points passed go through first one\n      const keys = Object.keys(hoveredObject.points[0].properties);\n      DATA = keys\n        .slice(1, all ? keys.length : n) // miss accident_index\n        .map(p => {\n          let points = [\n            humanize(p),\n            hoveredObject.points[0].properties[p],\n          ]\n          if (hoveredObject.points[1]) {\n            points.push(hoveredObject.points[1].properties[p])\n          }\n          return (points)\n        })\n    }\n    return <Table style={{ maxWidth: '320px' }}\n      columns={\n        hoveredObject.points &&\n          hoveredObject.points.length === 2 ?\n          ['Property', 'Value p1', 'Value p2'] : ['Property', 'Value']\n      } data={DATA} />\n\n  }\n}","/**\n * Main entry to the application.\n * \n * The crucial bits are:\n * \n     this.state = {\n      data,            <= main data holding param   \n      layers: [],      <= mapgl layers object\n      initialViewState:<= deckgl/mapgl initial state object\n      legend: false    <= map legend to avoid rerender.\n    }\n * and\n * DeckSidebarContainer which holds DeckSidebar object itself.\n * \n * Main funcitons:\n * _generateLayer which is the main/factory of filtering state\n * of the map area of the application.\n * \n */\nimport React from 'react';\nimport DeckGL from 'deck.gl';\nimport MapGL, { NavigationControl, FlyToInterpolator, Source, Layer } from 'react-map-gl';\nimport centroid from '@turf/centroid';\nimport bbox from '@turf/bbox';\nimport _ from 'underscore';\n\nimport {\n  fetchData, generateDeckLayer,\n  getParamsFromSearch, getBbx,\n  isMobile, colorScale, \n  colorRanges, addLayerToMap, OSMTILES,\n  convertRange, getMin, getMax, isURL, updateHistory\n} from './utils';\nimport Constants from './Constants';\nimport DeckSidebarContainer from\n  './components/DeckSidebar/DeckSidebarContainer';\nimport history from './history';\n\nimport './App.css';\nimport Tooltip from './components/Tooltip';\nimport { sfType } from './geojsonutils';\nimport { isNumber, isArray } from './JSUtils';\nimport { throttle } from 'lodash';\n\nconst URL = (process.env.NODE_ENV === 'development' ? Constants.DEV_URL : Constants.PRD_URL);\nconst defualtURL = \"/api/stats19\";\n\n// Set your mapbox access token here\nconst MAPBOX_ACCESS_TOKEN = process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n\nconst gradient = {\n  height: '200px',\n  // TODO: which browsers?\n  backgroundColor: 'red', /* For browsers that do not support gradients */\n  backgroundImage: 'linear-gradient(to top, red , yellow)' /* Standard syntax (must be last) */\n}\n\nconst LIGHT_SETTINGS = {\n  lightsPosition: [-0.144528, 49.739968, 8000, -3.807751, 54.104682, 8000],\n  ambientRatio: 0.4,\n  diffuseRatio: 0.6,\n  specularRatio: 0.2,\n  lightsStrength: [0.8, 0.0, 0.8, 0.0],\n  numberOfLights: 2\n};\n\nexport default class Welcome extends React.Component {\n  constructor(props) {\n    super(props)\n    const init = {\n      longitude: -1.6362,\n      latitude: 53.8321,\n      zoom: 10,\n      pitch: 55,\n      bearing: 0,\n    }\n    const param = getParamsFromSearch(props.location.search);\n    if (param) {\n      //lat=53.814&lng=-1.534&zoom=11.05&bea=0&pit=55&alt=1.5\n      Object.keys(param).forEach(key => {\n        Object.keys(init).forEach(iKey => {\n          if (iKey.startsWith(key)) {\n            init[key] = param[key]\n          }\n        })\n      })\n    }\n\n    this.state = {\n      loading: true,\n      layers: [],\n      backgroundImage: gradient.backgroundImage,\n      radius: Constants.RADIUS,\n      elevation: Constants.ELEVATION,\n      mapStyle: MAPBOX_ACCESS_TOKEN ? (\"mapbox://styles/mapbox/\" +\n        (props.dark ? \"dark\" : \"streets\") + \"-v9\") : OSMTILES,\n      initialViewState: init,\n      subsetBoundsChange: true,\n      colourName: 'default',\n      iconLimit: 500,\n      legend: false,\n      multiVarSelect: {}\n    }\n    this._generateLayer = this._generateLayer.bind(this)\n    this._renderTooltip = this._renderTooltip.bind(this);\n    this._fetchAndUpdateState = this._fetchAndUpdateState.bind(this);\n    this._fitViewport = this._fitViewport.bind(this);\n    this._updateURL = this._updateURL.bind(this);\n    // TODO: can let user change the 300\n    this._throttleUR = throttle((v) => this._updateURL(v), 300)\n  }\n\n  componentDidMount() {\n    this._fetchAndUpdateState()\n    addLayerToMap(this.map, MAPBOX_ACCESS_TOKEN);\n  }\n\n  /**\n   * Main function to fetch data and update state.\n   * \n   * @param {String} aURL to use if not default `/api/stats19` is used.\n   * @param {Object} customError to use in case of urlCallback object/urls.\n   * @param {Boolean} fitView whether viewState has been set externally,\n   * default is true.\n   */\n  _fetchAndUpdateState(aURL, customError, fitView = true) {\n    if (aURL && !isURL(aURL)) return;\n    if (customError && typeof (customError) !== 'object') return;\n    // TODO: more sanity checks?\n    const fullURL = aURL ?\n      // TODO: decide which is better.\n      // URL + \"/api/url?q=\" + aURL : // get the server to parse it \n      aURL : // do not get the server to parse it \n      URL + defualtURL + \"/0/0/0/0\"; // 0/0/0/0 is the default bounding\n      // no ending slash by choice for this versio of plumber\n    this.setState({ loading: true });\n    fetchData(fullURL, (data, error) => {\n      if (!error && data.features) {\n        this.setState({\n          loading: false,\n          data: data,\n          alert: customError || null,\n        })\n        fitView && this._fitViewport(data)\n        this._generateLayer()\n      } else {\n        this.setState({\n          loading: false,\n          alert: error ? { content: 'Could not reach: ' + fullURL } :\n          {content: data.message}\n        })\n        //network error?\n      }\n    })\n  }\n\n  /**\n   * Welcome should hold own state in selected as:\n   * {property: Set(val1, val2), ...}.\n   * \n   * @param {*} values includes\n   * radius: specific to changing geoms\n   * elevation: specific to changing geoms\n   * filter: multivariate filter of properties\n   * cn: short for colorName passed from callback\n   * TODO: other\n   */\n  _generateLayer(values = {}) {\n    const { radius, elevation, filter, cn } = values;\n\n    if (filter && filter.what === 'mapstyle') {\n      const newStyle = \"mapbox://styles/mapbox/\" + filter.selected + \"-v9\";\n      this.setState({\n        mapStyle: !MAPBOX_ACCESS_TOKEN ? OSMTILES :\n          filter && filter.what === 'mapstyle' ?  filter.selected === \"No map\" ?\n          Constants.BLANKSTYLE : newStyle : this.state.mapStyle,\n      })\n      return;\n    }\n    let data = this.state.data && this.state.data.features\n    if (!data) return;\n    const { colourName, iconLimit, multiVarSelect } = this.state;\n    let column = (filter && filter.what === 'column' && filter.selected) ||\n      this.state.column;\n    if (filter && filter.what === \"%\") {\n      data = data.slice(0, filter.selected / 100 * data.length)\n    }\n    // to optimize the search keep state as the source of truth\n    if (this.state.coords) {\n      data = this.state.filtered;\n    }\n    const geomType = sfType(data[0]).toLowerCase();\n    //if resetting a value\n    const filterValues = filter && filter.what === 'multi' ||\n      Object.keys(multiVarSelect).length;\n    const filterCoords = filter && filter.what === 'coords';\n    const selected = filter && filter.selected || multiVarSelect;\n    if (filterValues || filterCoords) {\n      data = data.filter(\n        d => {\n          if (filterValues) {\n            // go through each selection\n            // selected.var > Set()\n            for (let each of Object.keys(selected)) {\n              const nextValue = each === \"date\" ?\n                // for now format is yyyy-mm-dd\n                d.properties[each].split(\"-\")[0] : d.properties[each] + \"\"\n              // each from selected must be in d.properties\n              // *****************************\n              // compare string to string\n              // *****************************\n              if (!selected[each].has(nextValue)) {\n                return false\n              }\n            }\n          }\n          if (filterCoords) {\n            // coords in \n            if (_.difference(filter.selected || this.state.coords,\n              d.geometry.coordinates.flat()).length !== 0) {\n              return false;\n            }\n          }\n          return (true)\n        }\n      )\n    }\n    // console.log(data.length);\n    let layerStyle = (filter && filter.what ===\n      'layerStyle' && filter.selected) || this.state.layerStyle || 'grid';\n    if (geomType !== \"point\") layerStyle = \"geojson\";\n    const switchToIcon = data.length < iconLimit && !this.state.layerStyle && \n    (!filter || filter.what !== 'layerStyle') && geomType === \"point\";\n    if (switchToIcon) layerStyle = 'icon';\n    const options = {\n      radius: radius ? radius : this.state.radius,\n      cellSize: radius ? radius : this.state.radius,\n      elevationScale: elevation ? elevation : this.state.elevation,\n      lightSettings: LIGHT_SETTINGS,\n      colorRange: colorRanges(cn || colourName)\n    };\n    if (layerStyle === 'geojson') {\n      options.getFillColor = (d) => colorScale(d, data) //first prop\n    }\n    let columnNameOrIndex =\n      (filter && filter.what === 'column' && filter.selected) || column || 1;\n    if (layerStyle === 'heatmap') {\n      options.getPosition = d => d.geometry.coordinates\n      // options.getWeight = d => d.properties[columnNameOrIndex]\n    }\n    if (geomType === 'linestring') {\n      layerStyle = \"line\"\n      // https://github.com/uber/deck.gl/blob/master/docs/layers/line-layer.md\n      options.getColor = d => [235, 170, 20]\n      options.getPath = d => d.geometry.coordinates\n      options.onClick = (info) => {\n        // console.log(info);\n        if (info && info.hasOwnProperty('coordinate')) {\n          if (['path', 'arc', 'line'].includes(this.state.layerStyle) &&\n            info.object.geometry.coordinates) {\n            this._generateLayer({\n              filter: {\n                what: 'coords',\n                selected: info.object.geometry.coordinates[0]\n              }\n            })\n          }\n        }\n      }\n      if (layerStyle === 'line') {\n        // options.getSourceColor = d => [Math.sqrt(+(d.properties.base)) * 1000, 140, 0]\n        // options.getTargetColor = d => [Math.sqrt(+(d.properties.hs2)) * 1e13, 140, 0]\n        options.getSourcePosition = d => d.geometry.coordinates[0] // geojson\n        options.getTargetPosition = d => d.geometry.coordinates[1] // geojson\n      }\n      if (isNumber(data[0] && data[0].properties &&\n        data[0].properties[columnNameOrIndex])) {\n        const colArray = data.map(f => f.properties[columnNameOrIndex])\n        const max = getMax(colArray);\n        const min = getMin(colArray)\n        options.getWidth = d => {\n          let newMax = 10, newMin = 0.1;\n          if (data.length > 100000) {\n            newMax = 0.5; newMin = 0.005\n          }\n          const r = convertRange(\n            d.properties[columnNameOrIndex], {\n            oldMin: min, oldMax: max, newMax: newMax, newMin: newMin\n          })\n          return r\n        }; // avoid id\n      }\n    }\n    if (geomType === \"polygon\" || geomType === \"multipolygon\") {\n      const cols = Object.keys(data[0] && data[0].properties &&\n        data[0].properties);\n      // TODO: remove SPENSER\n      const SPENSER = isArray(cols) && cols.length > 0 &&\n        cols[1] === 'GEOGRAPHY_CODE';\n      if (SPENSER) {\n        options.getElevation = d => (isNumber(d.properties[column]) &&\n          column !== 'YEAR' && d.properties[column]) || null\n      }\n      // TODO: allow user to specify column.\n      options.getFillColor = (d) =>\n        colorScale(d, data, column ? column : SPENSER ? 1 : 0)\n    }\n    const alayer = generateDeckLayer(\n      layerStyle, data, this._renderTooltip, options\n    )\n\n    this.setState({\n      alert: switchToIcon ? { content: 'Switched to icon mode. ' } : null,\n      loading: false,\n      // do not save if not given else leave it as it is\n      layerStyle: filter && filter.what ===\n        'layerStyle' ? filter.selected : this.state.layerStyle,\n      // do not save if not given etc\n      multiVarSelect: filter && filter.what === \"multi\" ? \n      filter.selected : multiVarSelect,\n      geomType,\n      tooltip: \"\",\n      filtered: data,\n      layers: [alayer],\n      radius: radius ? radius : this.state.radius,\n      elevation: elevation ? elevation : this.state.elevation,\n      road_type: filter && filter.what === 'road_type' ? filter.selected :\n        this.state.road_type,\n      colourName: cn || colourName,\n      column, // all checked\n      coords: filter && filter.what === 'coords' ? filter.selected :\n        this.state.coords\n    })\n  }\n\n  _fitViewport(newData, bboxLonLat) {\n    const data = newData || this.state.data;\n    if ((!data || data.length === 0) && !bboxLonLat) return;\n    const bounds = bboxLonLat ?\n      bboxLonLat.bbox : bbox(data)\n    const center = bboxLonLat ? \n    [bboxLonLat.lon, bboxLonLat.lat] : centroid(data).geometry.coordinates;\n\n    this.map.fitBounds(bounds, {padding:'100px'})\n\n    const viewport = {\n      ...this.state.viewport,\n      longitude: center[0],\n      latitude: center[1],\n      transitionDuration: 500,\n      transitionInterpolator: new FlyToInterpolator(),\n      // transitionEasing: d3.easeCubic\n    };\n    this.setState({ viewport })\n  }\n\n  _renderTooltip({ x, y, object }) {\n    const hoveredObject = object;\n    // console.log(hoveredObject && hoveredObject.points[0].properties.speed_limit);\n    // console.log(hoveredObject)\n    // return\n    if (!hoveredObject) {\n      this.setState({ tooltip: \"\" })\n      return;\n    }\n    this.setState({\n      tooltip:\n        // react did not like x and y props.\n        <Tooltip\n          isMobile={isMobile()}\n          topx={x} topy={y} hoveredObject={hoveredObject} />\n    })\n  }\n\n  _updateURL(viewport) {\n    updateHistory(viewport)\n  }\n\n  _fetchDataWithBounds() {\n    const { subsetBoundsChange } = this.state;\n    const bounds = this.map && this.map.getBounds();\n    // console.log(bounds, subsetBoundsChange);\n    if (bounds && subsetBoundsChange) {\n      const box = getBbx(bounds);\n      // console.log(\"bounds\", box);\n      // we need some margins int he user's view\n      const { xmin, ymin, xmax, ymax } = box; // we can do shrinking at R easier\n      //TODO: refactor the rest to use _fetchAndUpdateState\n      // just needs switch to ignore refitting window\n      // also needs handling \"zoom in\" message\n      let r = 0.05\n      if(xmax - xmin < 3*r || ymax - ymin < 3*r) r = 0\n      const u = URL + defualtURL + \"/\" + (xmin + r) + \"/\" +\n      (ymin + r/2) + \"/\" + (xmax - r) + \"/\" + (ymax - r/2)\n      this._fetchAndUpdateState(u, undefined, false)\n    }\n  }\n\n  render() {\n    const { tooltip, viewport, initialViewState,\n      loading, mapStyle, alert, data, filtered,\n      layerStyle, geomType, legend, coords } = this.state;\n    // console.log(geomType, legend);\n\n    return (\n      <div id=\"html2pdf\">\n        {/* just a little catch to hide the loader \n        when no basemap is presetn */}\n        <div className=\"loader\" style={{\n          zIndex: loading ? 999 : -1,\n          visibility: typeof mapStyle === 'string' &&\n            mapStyle.endsWith(\"No map-v9\") ? 'hidden' : 'visible'\n        }} />\n        <MapGL\n          ref={ref => {\n            // save a reference to the mapboxgl.Map instance\n            this.map = ref && ref.getMap();\n          }}\n          mapStyle={mapStyle}\n          onViewportChange={(viewport) => {\n            this._throttleUR(viewport)\n            this.setState({ viewport })\n          }}\n          // see\n          // https://github.com/visgl/react-map-gl/issues/190#issuecomment-616381024\n          onInteractionStateChange={(s) => {\n            if (\n              s.isDragging ||\n              s.inTransition ||\n              s.isRotating ||\n              s.isZooming ||\n              s.isHovering ||\n              s.isPanning\n            )\n              return;\n            this._fetchDataWithBounds();\n          }}\n          height={window.innerHeight - 54 + 'px'}\n          width={window.innerWidth + 'px'}\n          //crucial bit below\n          viewState={viewport ? viewport : initialViewState}\n        // mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\n        >\n          <div className='mapboxgl-ctrl-top-right' style={{\n            zIndex: 9\n          }}>\n            <NavigationControl\n              {...viewport}\n              onViewportChange={viewport => this.setState({ viewport })}\n            />\n          </div>\n          <DeckGL\n            viewState={viewport ? viewport : initialViewState}\n            initialViewState={initialViewState}\n            layers={this.state.layers}\n            // see docs below, url split for readability\n            // https://deck.gl/#/documentation/developer-guide/\n            // adding-interactivity?\n            // section=using-the-built-in-event-handling\n            onClick={(e) => {\n              console.log(e);\n              // this.setState({\n              //   tooltip: <Modal \n              //   open={true} \n              //   noButton={true} \n              //   toggleOpen={() => {\n              //     this.setState({tooltip: null})\n              //   }}\n              //   />\n              // })\n              if (!e.layer && coords) {\n                this.setState({ coords: null })\n                this._generateLayer()\n              }\n            }}\n            onHover={(info, evt) => {\n              // const mapboxFeatures = this.map.queryRenderedFeatures([evt.offsetX, evt.offsetY]);\n              // console.log(info, evt);\n              // console.log(this.map.getLayer(\"vt\"))\n              // let sp = this.map.queryRenderedFeatures()[0].properties.spenser;\n              // sp = Object.values(JSON.parse(sp))[0]\n              // const r = [];\n              // while (sp.length) {\n              //     r.push(sp.splice(0, 4));\n              // }\n              // console.log(sp)\n            }}\n          >\n            {tooltip}\n          </DeckGL>\n          {/* <Source\n            id=\"vt\"\n            type=\"vector\"\n            tiles={['http://localhost:8000/tiles/{z}/{x}/{y}.pbf']}>\n            <Layer\n              id=\"vt\"\n              type=\"fill\"\n              source-layer=\"out20112012\"\n              paint={{\n                'fill-opacity': .4,\n                'fill-color': '#007cbf'\n              }} />\n          </Source> */}\n        </MapGL>\n        <DeckSidebarContainer\n          loading={loading}\n          dark={this.props.dark}\n          layerStyle={layerStyle}\n          isMobile={isMobile()}\n          key=\"decksidebar\"\n          alert={alert}\n          unfilteredData={data && data.features}\n          data={filtered}\n          colourCallback={(colourName) =>\n            this._generateLayer({ cn: colourName })\n          }\n          urlCallback={(url_returned, geojson_returned) => {\n            this.setState({\n              tooltip: \"\",\n              road_type: \"\",\n              radius: Constants.RADIUS,\n              elevation: Constants.ELEVATION,\n              loading: true,\n              coords: null\n            })\n            if (geojson_returned) {\n              // confirm valid geojson\n              try {\n                this.setState({\n                  data: geojson_returned\n                })\n                this._fitViewport(geojson_returned)\n                this._generateLayer()\n              } catch (error) {\n                // load up default\n                this._fetchAndUpdateState(undefined, { content: error.message });\n              }\n            } else {\n              this._fetchAndUpdateState(url_returned);\n            }\n          }}\n          column={this.state.column}\n          onSelectCallback={(selected) => this._generateLayer({ filter: selected })}\n          onChangeRadius={(value) => this._generateLayer({ radius: value })}\n          onChangeElevation={(value) => this._generateLayer({ elevation: value })}\n          toggleSubsetBoundsChange={(checked) => {\n            this.setState({\n              subsetBoundsChange: checked\n            })\n            checked && this._fetchDataWithBounds();\n          }}\n          onlocationChange={(bboxLonLat) => {\n            this._fitViewport(undefined, bboxLonLat)\n          }}\n          showLegend={(legend) => this.setState({ legend })}\n        />\n        {\n          legend && (geomType === 'polygon' ||\n            geomType === 'multipolygon') &&\n          <div className=\"right-side-panel mapbox-legend\">\n            {legend}\n          </div>\n        }\n      </div>\n    );\n  }\n}","/**\n * geoplumber R package code.\n */\nimport React, { useState } from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst navs = [\n  {\n    key: 1,\n    to: \"about\",\n    title: \"About\"\n  },\n];\n\nfunction Header(props) {\n  const [dark, setDark] = useState(props.dark)\n  return (\n    <Navbar inverse={dark} collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>\n          <Link to=\"/\">\n            SaferActive\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav>\n          {\n            navs.map((item, i) => {\n              return (\n                <NavItem\n                  key={i}\n                  eventKey={item.key}\n                  onClick={() => props.history.push(item.to)}>\n                  {item.title}\n                </NavItem>\n              )\n            })\n          }\n          <NavItem>Beta</NavItem>\n        </Nav>\n        {/* trick RB with navbar-nav > li a but do it like following*/}\n        {/* <div className=\"nav navbar-nav\">\n            <li>\n              <a href=\"https://github.com/layik/eAtlas\">\n                <i style={{ fontSize: '1.5em' }} className=\"fa fa-github\"></i>\n              </a>\n            </li>\n          </div> */}\n        <Nav pullRight>\n          <NavItem href=\"https://github.com/saferactive\">\n            <i style={{ fontSize: '1.5em' }} className=\"fa fa-github\"></i>\n          </NavItem>\n        </Nav>\n        <Nav pullRight>\n          <NavItem onClick={() => {\n            typeof props.toggleTheme === 'function' && props.toggleTheme()\n            setDark(!dark)\n          }}>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n              <g transform=\"matrix( 1 0 0 1 4 1 )\">\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                  d=\"M15.3999 11C15.7999 10.1 16 9 16 8C16 3.6 12.4 0 8 0C3.6 0 0 3.6 0 8C0 9.1 0.200098 10.1 0.600098 11L2.19995 15L13.8 15L15.3999 11ZM11 22L12.6001 18L3.3999 18L5 22L11 22Z\" fill={\n                    dark ? '#fff' : '#000'\n                  } opacity=\"1\">\n                </path>\n              </g>\n            </svg>\n          </NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar >\n  )\n}\n\n// thanks to https://stackoverflow.com/a/42124328/2332101\nexport default withRouter(Header);\n","/**\n * L Hama\n */\nimport React, { Component } from 'react';\nimport marked from \"marked\";\n\n/**\n * Separate the Header and the main content.\n * Up to this point we are still not using SSR\n */\nclass About extends Component {\n  state = { markdown: null }\n  componentDidMount() {\n    const readmePath = require(\"./notes.md\");\n\n    fetch(readmePath)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {\n        this.setState({\n          markdown: marked(text)\n        })\n      })\n  }\n  render() {\n    const { markdown } = this.state;\n\n    return (\n      <section style={{ background: 'white', padding: '5%' }}>\n        <article dangerouslySetInnerHTML={{ __html: markdown }}></article>\n      </section>\n    )\n  }\n}\n\nexport default About;\n","/**\n * geoplumber R package code.\n */\nimport React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Welcome from './Welcome';\nimport Header from './components/Header';\nimport About from './About';\n\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { BaseProvider, LightTheme, DarkTheme } from 'baseui';\nimport { Client as Styletron } from 'styletron-engine-atomic';\n\nimport '../node_modules/react-vis/dist/style.css';\n\nimport './App.css';\n\nconst engine = new Styletron();\n\n/**\n * Separate the Header and the main content.\n * Up to this point we are still not using SSR\n */\nfunction App() {\n    const [dark, setDark] = useState(true)\n    \n    return (\n      <main>\n        <Header dark={dark}\n        toggleTheme={() => setDark(!dark)}/>\n        <StyletronProvider value={engine}>\n          <BaseProvider theme={dark ? DarkTheme : LightTheme}>\n            <Switch>\n              <Route exact path=\"/\" component={(props) => <Welcome \n              {...props}\n              dark={dark}\n              />} />\n              <Route exact path=\"/about\" component={About} />\n            </Switch>\n          </BaseProvider>\n        </StyletronProvider>\n      </main>\n    )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * geoplumber R package code.\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n// brief about serviceworkers from CRA\n// https://stackoverflow.com/a/49314454/11101153\nimport { unregister } from './registerServiceWorker';\n\n// keep leaflet for now in case.\n\n// *** Do NOT remove, it seems the location for icon is missing or something\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\n/**\n * Separating index.js and App.js:\n * 1. doing above like launch configs here\n * 2. keep App.js clear for React application.\n */\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>, document.getElementById('root'));\n\nunregister();\n","function define(name, value) {\n  Object.defineProperty(exports, name, {\n    value: value,\n    enumerable: true\n  });\n}\n\n// TODO: change to domain name \ndefine(\"PRD_URL\", 'https://map.saferactive.org');\ndefine(\"DEV_URL\", 'http://localhost:8000');\ndefine(\"UI_LIST\", [\n  \"checkbox\",\n  \"radio\",\n  \"buttongroups\",\n  \"dropdown\",\n  \"slider\"]) \ndefine(\"LAYERSTYLES\", [\n  // \"geojson\",\n  \"grid\",\n  \"heatmap\",\n  \"hex\",\n  \"icon\",\n  // \"line\",\n  // \"path\",\n  // \"scatterplot\",\n  \"sgrid\"\n])\ndefine(\"BLANKSTYLE\", {\n  \"version\": 8, \"name\": \"Blank\", \"center\": [0, 0],\n  \"zoom\": 0, \"sources\": {},\n  \"sprite\": \"file://roblabs.com/sprite\",\n  \"glyphs\": \"file://roblabs.com/fonts/mapbox/{fontstack}/{range}.pbf\",\n  \"layers\": [{\n    \"id\": \"background\", \"type\": \"background\", \"paint\":\n      { \"background-color\": \"rgba(255,255,255,1)\" }\n  }], \"id\": \"blank\"\n})\ndefine(\"RADIUS\", 250)\ndefine(\"ELEVATION\", 4)"],"sourceRoot":""}